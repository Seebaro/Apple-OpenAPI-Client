# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import List, Optional
from typing_extensions import Annotated
from openapi_client.models.app_response import AppResponse
from openapi_client.models.ci_build_runs_response import CiBuildRunsResponse
from openapi_client.models.ci_product_additional_repositories_linkages_response import CiProductAdditionalRepositoriesLinkagesResponse
from openapi_client.models.ci_product_app_linkage_response import CiProductAppLinkageResponse
from openapi_client.models.ci_product_build_runs_linkages_response import CiProductBuildRunsLinkagesResponse
from openapi_client.models.ci_product_primary_repositories_linkages_response import CiProductPrimaryRepositoriesLinkagesResponse
from openapi_client.models.ci_product_response import CiProductResponse
from openapi_client.models.ci_product_workflows_linkages_response import CiProductWorkflowsLinkagesResponse
from openapi_client.models.ci_products_response import CiProductsResponse
from openapi_client.models.ci_workflows_response import CiWorkflowsResponse
from openapi_client.models.scm_repositories_response import ScmRepositoriesResponse

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class CiProductsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def ci_products_additional_repositories_get_to_many_related(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_id: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s)")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_scm_providers: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmProviders")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ScmRepositoriesResponse:
        """ci_products_additional_repositories_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_id: filter by id(s)
        :type filter_id: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_scm_providers: the fields to include for returned resources of type scmProviders
        :type fields_scm_providers: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_additional_repositories_get_to_many_related_serialize(
            id=id,
            filter_id=filter_id,
            fields_scm_repositories=fields_scm_repositories,
            fields_scm_providers=fields_scm_providers,
            fields_scm_git_references=fields_scm_git_references,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "ScmRepositoriesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_additional_repositories_get_to_many_related_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_id: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s)")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_scm_providers: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmProviders")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ScmRepositoriesResponse]:
        """ci_products_additional_repositories_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_id: filter by id(s)
        :type filter_id: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_scm_providers: the fields to include for returned resources of type scmProviders
        :type fields_scm_providers: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_additional_repositories_get_to_many_related_serialize(
            id=id,
            filter_id=filter_id,
            fields_scm_repositories=fields_scm_repositories,
            fields_scm_providers=fields_scm_providers,
            fields_scm_git_references=fields_scm_git_references,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "ScmRepositoriesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_additional_repositories_get_to_many_related_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_id: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s)")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_scm_providers: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmProviders")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_additional_repositories_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_id: filter by id(s)
        :type filter_id: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_scm_providers: the fields to include for returned resources of type scmProviders
        :type fields_scm_providers: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_additional_repositories_get_to_many_related_serialize(
            id=id,
            filter_id=filter_id,
            fields_scm_repositories=fields_scm_repositories,
            fields_scm_providers=fields_scm_providers,
            fields_scm_git_references=fields_scm_git_references,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "ScmRepositoriesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_additional_repositories_get_to_many_related_serialize(
        self,
        id,
        filter_id,
        fields_scm_repositories,
        fields_scm_providers,
        fields_scm_git_references,
        limit,
        include,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'filter[id]': 'csv',
            'fields[scmRepositories]': 'csv',
            'fields[scmProviders]': 'csv',
            'fields[scmGitReferences]': 'csv',
            'include': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if filter_id is not None:
            
            _query_params.append(('filter[id]', filter_id))
            
        if fields_scm_repositories is not None:
            
            _query_params.append(('fields[scmRepositories]', fields_scm_repositories))
            
        if fields_scm_providers is not None:
            
            _query_params.append(('fields[scmProviders]', fields_scm_providers))
            
        if fields_scm_git_references is not None:
            
            _query_params.append(('fields[scmGitReferences]', fields_scm_git_references))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/additionalRepositories',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_additional_repositories_get_to_many_relationship(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiProductAdditionalRepositoriesLinkagesResponse:
        """ci_products_additional_repositories_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_additional_repositories_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductAdditionalRepositoriesLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_additional_repositories_get_to_many_relationship_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiProductAdditionalRepositoriesLinkagesResponse]:
        """ci_products_additional_repositories_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_additional_repositories_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductAdditionalRepositoriesLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_additional_repositories_get_to_many_relationship_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_additional_repositories_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_additional_repositories_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductAdditionalRepositoriesLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_additional_repositories_get_to_many_relationship_serialize(
        self,
        id,
        limit,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/relationships/additionalRepositories',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_app_get_to_one_related(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_app_encryption_declarations: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appEncryptionDeclarations")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_beta_groups: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaGroups")] = None,
        fields_app_store_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appStoreVersions")] = None,
        fields_pre_release_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type preReleaseVersions")] = None,
        fields_beta_app_localizations: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaAppLocalizations")] = None,
        fields_builds: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type builds")] = None,
        fields_beta_license_agreements: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaLicenseAgreements")] = None,
        fields_beta_app_review_details: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaAppReviewDetails")] = None,
        fields_app_infos: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appInfos")] = None,
        fields_app_clips: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appClips")] = None,
        fields_end_user_license_agreements: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type endUserLicenseAgreements")] = None,
        fields_in_app_purchases: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type inAppPurchases")] = None,
        fields_subscription_groups: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type subscriptionGroups")] = None,
        fields_game_center_enabled_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type gameCenterEnabledVersions")] = None,
        fields_app_custom_product_pages: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appCustomProductPages")] = None,
        fields_promoted_purchases: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type promotedPurchases")] = None,
        fields_app_events: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appEvents")] = None,
        fields_review_submissions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type reviewSubmissions")] = None,
        fields_subscription_grace_periods: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type subscriptionGracePeriods")] = None,
        fields_game_center_details: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type gameCenterDetails")] = None,
        fields_app_store_version_experiments: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appStoreVersionExperiments")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_app_encryption_declarations: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appEncryptionDeclarations returned (when they are included)")] = None,
        limit_beta_groups: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related betaGroups returned (when they are included)")] = None,
        limit_app_store_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appStoreVersions returned (when they are included)")] = None,
        limit_pre_release_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related preReleaseVersions returned (when they are included)")] = None,
        limit_beta_app_localizations: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related betaAppLocalizations returned (when they are included)")] = None,
        limit_builds: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related builds returned (when they are included)")] = None,
        limit_app_infos: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appInfos returned (when they are included)")] = None,
        limit_app_clips: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appClips returned (when they are included)")] = None,
        limit_in_app_purchases: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related inAppPurchases returned (when they are included)")] = None,
        limit_subscription_groups: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related subscriptionGroups returned (when they are included)")] = None,
        limit_game_center_enabled_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related gameCenterEnabledVersions returned (when they are included)")] = None,
        limit_app_custom_product_pages: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appCustomProductPages returned (when they are included)")] = None,
        limit_in_app_purchases_v2: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related inAppPurchasesV2 returned (when they are included)")] = None,
        limit_promoted_purchases: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related promotedPurchases returned (when they are included)")] = None,
        limit_app_events: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appEvents returned (when they are included)")] = None,
        limit_review_submissions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related reviewSubmissions returned (when they are included)")] = None,
        limit_app_store_version_experiments_v2: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appStoreVersionExperimentsV2 returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AppResponse:
        """ci_products_app_get_to_one_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_app_encryption_declarations: the fields to include for returned resources of type appEncryptionDeclarations
        :type fields_app_encryption_declarations: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_beta_groups: the fields to include for returned resources of type betaGroups
        :type fields_beta_groups: List[str]
        :param fields_app_store_versions: the fields to include for returned resources of type appStoreVersions
        :type fields_app_store_versions: List[str]
        :param fields_pre_release_versions: the fields to include for returned resources of type preReleaseVersions
        :type fields_pre_release_versions: List[str]
        :param fields_beta_app_localizations: the fields to include for returned resources of type betaAppLocalizations
        :type fields_beta_app_localizations: List[str]
        :param fields_builds: the fields to include for returned resources of type builds
        :type fields_builds: List[str]
        :param fields_beta_license_agreements: the fields to include for returned resources of type betaLicenseAgreements
        :type fields_beta_license_agreements: List[str]
        :param fields_beta_app_review_details: the fields to include for returned resources of type betaAppReviewDetails
        :type fields_beta_app_review_details: List[str]
        :param fields_app_infos: the fields to include for returned resources of type appInfos
        :type fields_app_infos: List[str]
        :param fields_app_clips: the fields to include for returned resources of type appClips
        :type fields_app_clips: List[str]
        :param fields_end_user_license_agreements: the fields to include for returned resources of type endUserLicenseAgreements
        :type fields_end_user_license_agreements: List[str]
        :param fields_in_app_purchases: the fields to include for returned resources of type inAppPurchases
        :type fields_in_app_purchases: List[str]
        :param fields_subscription_groups: the fields to include for returned resources of type subscriptionGroups
        :type fields_subscription_groups: List[str]
        :param fields_game_center_enabled_versions: the fields to include for returned resources of type gameCenterEnabledVersions
        :type fields_game_center_enabled_versions: List[str]
        :param fields_app_custom_product_pages: the fields to include for returned resources of type appCustomProductPages
        :type fields_app_custom_product_pages: List[str]
        :param fields_promoted_purchases: the fields to include for returned resources of type promotedPurchases
        :type fields_promoted_purchases: List[str]
        :param fields_app_events: the fields to include for returned resources of type appEvents
        :type fields_app_events: List[str]
        :param fields_review_submissions: the fields to include for returned resources of type reviewSubmissions
        :type fields_review_submissions: List[str]
        :param fields_subscription_grace_periods: the fields to include for returned resources of type subscriptionGracePeriods
        :type fields_subscription_grace_periods: List[str]
        :param fields_game_center_details: the fields to include for returned resources of type gameCenterDetails
        :type fields_game_center_details: List[str]
        :param fields_app_store_version_experiments: the fields to include for returned resources of type appStoreVersionExperiments
        :type fields_app_store_version_experiments: List[str]
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_app_encryption_declarations: maximum number of related appEncryptionDeclarations returned (when they are included)
        :type limit_app_encryption_declarations: int
        :param limit_beta_groups: maximum number of related betaGroups returned (when they are included)
        :type limit_beta_groups: int
        :param limit_app_store_versions: maximum number of related appStoreVersions returned (when they are included)
        :type limit_app_store_versions: int
        :param limit_pre_release_versions: maximum number of related preReleaseVersions returned (when they are included)
        :type limit_pre_release_versions: int
        :param limit_beta_app_localizations: maximum number of related betaAppLocalizations returned (when they are included)
        :type limit_beta_app_localizations: int
        :param limit_builds: maximum number of related builds returned (when they are included)
        :type limit_builds: int
        :param limit_app_infos: maximum number of related appInfos returned (when they are included)
        :type limit_app_infos: int
        :param limit_app_clips: maximum number of related appClips returned (when they are included)
        :type limit_app_clips: int
        :param limit_in_app_purchases: maximum number of related inAppPurchases returned (when they are included)
        :type limit_in_app_purchases: int
        :param limit_subscription_groups: maximum number of related subscriptionGroups returned (when they are included)
        :type limit_subscription_groups: int
        :param limit_game_center_enabled_versions: maximum number of related gameCenterEnabledVersions returned (when they are included)
        :type limit_game_center_enabled_versions: int
        :param limit_app_custom_product_pages: maximum number of related appCustomProductPages returned (when they are included)
        :type limit_app_custom_product_pages: int
        :param limit_in_app_purchases_v2: maximum number of related inAppPurchasesV2 returned (when they are included)
        :type limit_in_app_purchases_v2: int
        :param limit_promoted_purchases: maximum number of related promotedPurchases returned (when they are included)
        :type limit_promoted_purchases: int
        :param limit_app_events: maximum number of related appEvents returned (when they are included)
        :type limit_app_events: int
        :param limit_review_submissions: maximum number of related reviewSubmissions returned (when they are included)
        :type limit_review_submissions: int
        :param limit_app_store_version_experiments_v2: maximum number of related appStoreVersionExperimentsV2 returned (when they are included)
        :type limit_app_store_version_experiments_v2: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_app_get_to_one_related_serialize(
            id=id,
            fields_apps=fields_apps,
            fields_app_encryption_declarations=fields_app_encryption_declarations,
            fields_ci_products=fields_ci_products,
            fields_beta_groups=fields_beta_groups,
            fields_app_store_versions=fields_app_store_versions,
            fields_pre_release_versions=fields_pre_release_versions,
            fields_beta_app_localizations=fields_beta_app_localizations,
            fields_builds=fields_builds,
            fields_beta_license_agreements=fields_beta_license_agreements,
            fields_beta_app_review_details=fields_beta_app_review_details,
            fields_app_infos=fields_app_infos,
            fields_app_clips=fields_app_clips,
            fields_end_user_license_agreements=fields_end_user_license_agreements,
            fields_in_app_purchases=fields_in_app_purchases,
            fields_subscription_groups=fields_subscription_groups,
            fields_game_center_enabled_versions=fields_game_center_enabled_versions,
            fields_app_custom_product_pages=fields_app_custom_product_pages,
            fields_promoted_purchases=fields_promoted_purchases,
            fields_app_events=fields_app_events,
            fields_review_submissions=fields_review_submissions,
            fields_subscription_grace_periods=fields_subscription_grace_periods,
            fields_game_center_details=fields_game_center_details,
            fields_app_store_version_experiments=fields_app_store_version_experiments,
            include=include,
            limit_app_encryption_declarations=limit_app_encryption_declarations,
            limit_beta_groups=limit_beta_groups,
            limit_app_store_versions=limit_app_store_versions,
            limit_pre_release_versions=limit_pre_release_versions,
            limit_beta_app_localizations=limit_beta_app_localizations,
            limit_builds=limit_builds,
            limit_app_infos=limit_app_infos,
            limit_app_clips=limit_app_clips,
            limit_in_app_purchases=limit_in_app_purchases,
            limit_subscription_groups=limit_subscription_groups,
            limit_game_center_enabled_versions=limit_game_center_enabled_versions,
            limit_app_custom_product_pages=limit_app_custom_product_pages,
            limit_in_app_purchases_v2=limit_in_app_purchases_v2,
            limit_promoted_purchases=limit_promoted_purchases,
            limit_app_events=limit_app_events,
            limit_review_submissions=limit_review_submissions,
            limit_app_store_version_experiments_v2=limit_app_store_version_experiments_v2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "AppResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_app_get_to_one_related_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_app_encryption_declarations: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appEncryptionDeclarations")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_beta_groups: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaGroups")] = None,
        fields_app_store_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appStoreVersions")] = None,
        fields_pre_release_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type preReleaseVersions")] = None,
        fields_beta_app_localizations: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaAppLocalizations")] = None,
        fields_builds: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type builds")] = None,
        fields_beta_license_agreements: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaLicenseAgreements")] = None,
        fields_beta_app_review_details: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaAppReviewDetails")] = None,
        fields_app_infos: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appInfos")] = None,
        fields_app_clips: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appClips")] = None,
        fields_end_user_license_agreements: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type endUserLicenseAgreements")] = None,
        fields_in_app_purchases: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type inAppPurchases")] = None,
        fields_subscription_groups: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type subscriptionGroups")] = None,
        fields_game_center_enabled_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type gameCenterEnabledVersions")] = None,
        fields_app_custom_product_pages: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appCustomProductPages")] = None,
        fields_promoted_purchases: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type promotedPurchases")] = None,
        fields_app_events: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appEvents")] = None,
        fields_review_submissions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type reviewSubmissions")] = None,
        fields_subscription_grace_periods: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type subscriptionGracePeriods")] = None,
        fields_game_center_details: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type gameCenterDetails")] = None,
        fields_app_store_version_experiments: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appStoreVersionExperiments")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_app_encryption_declarations: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appEncryptionDeclarations returned (when they are included)")] = None,
        limit_beta_groups: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related betaGroups returned (when they are included)")] = None,
        limit_app_store_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appStoreVersions returned (when they are included)")] = None,
        limit_pre_release_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related preReleaseVersions returned (when they are included)")] = None,
        limit_beta_app_localizations: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related betaAppLocalizations returned (when they are included)")] = None,
        limit_builds: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related builds returned (when they are included)")] = None,
        limit_app_infos: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appInfos returned (when they are included)")] = None,
        limit_app_clips: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appClips returned (when they are included)")] = None,
        limit_in_app_purchases: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related inAppPurchases returned (when they are included)")] = None,
        limit_subscription_groups: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related subscriptionGroups returned (when they are included)")] = None,
        limit_game_center_enabled_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related gameCenterEnabledVersions returned (when they are included)")] = None,
        limit_app_custom_product_pages: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appCustomProductPages returned (when they are included)")] = None,
        limit_in_app_purchases_v2: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related inAppPurchasesV2 returned (when they are included)")] = None,
        limit_promoted_purchases: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related promotedPurchases returned (when they are included)")] = None,
        limit_app_events: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appEvents returned (when they are included)")] = None,
        limit_review_submissions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related reviewSubmissions returned (when they are included)")] = None,
        limit_app_store_version_experiments_v2: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appStoreVersionExperimentsV2 returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AppResponse]:
        """ci_products_app_get_to_one_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_app_encryption_declarations: the fields to include for returned resources of type appEncryptionDeclarations
        :type fields_app_encryption_declarations: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_beta_groups: the fields to include for returned resources of type betaGroups
        :type fields_beta_groups: List[str]
        :param fields_app_store_versions: the fields to include for returned resources of type appStoreVersions
        :type fields_app_store_versions: List[str]
        :param fields_pre_release_versions: the fields to include for returned resources of type preReleaseVersions
        :type fields_pre_release_versions: List[str]
        :param fields_beta_app_localizations: the fields to include for returned resources of type betaAppLocalizations
        :type fields_beta_app_localizations: List[str]
        :param fields_builds: the fields to include for returned resources of type builds
        :type fields_builds: List[str]
        :param fields_beta_license_agreements: the fields to include for returned resources of type betaLicenseAgreements
        :type fields_beta_license_agreements: List[str]
        :param fields_beta_app_review_details: the fields to include for returned resources of type betaAppReviewDetails
        :type fields_beta_app_review_details: List[str]
        :param fields_app_infos: the fields to include for returned resources of type appInfos
        :type fields_app_infos: List[str]
        :param fields_app_clips: the fields to include for returned resources of type appClips
        :type fields_app_clips: List[str]
        :param fields_end_user_license_agreements: the fields to include for returned resources of type endUserLicenseAgreements
        :type fields_end_user_license_agreements: List[str]
        :param fields_in_app_purchases: the fields to include for returned resources of type inAppPurchases
        :type fields_in_app_purchases: List[str]
        :param fields_subscription_groups: the fields to include for returned resources of type subscriptionGroups
        :type fields_subscription_groups: List[str]
        :param fields_game_center_enabled_versions: the fields to include for returned resources of type gameCenterEnabledVersions
        :type fields_game_center_enabled_versions: List[str]
        :param fields_app_custom_product_pages: the fields to include for returned resources of type appCustomProductPages
        :type fields_app_custom_product_pages: List[str]
        :param fields_promoted_purchases: the fields to include for returned resources of type promotedPurchases
        :type fields_promoted_purchases: List[str]
        :param fields_app_events: the fields to include for returned resources of type appEvents
        :type fields_app_events: List[str]
        :param fields_review_submissions: the fields to include for returned resources of type reviewSubmissions
        :type fields_review_submissions: List[str]
        :param fields_subscription_grace_periods: the fields to include for returned resources of type subscriptionGracePeriods
        :type fields_subscription_grace_periods: List[str]
        :param fields_game_center_details: the fields to include for returned resources of type gameCenterDetails
        :type fields_game_center_details: List[str]
        :param fields_app_store_version_experiments: the fields to include for returned resources of type appStoreVersionExperiments
        :type fields_app_store_version_experiments: List[str]
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_app_encryption_declarations: maximum number of related appEncryptionDeclarations returned (when they are included)
        :type limit_app_encryption_declarations: int
        :param limit_beta_groups: maximum number of related betaGroups returned (when they are included)
        :type limit_beta_groups: int
        :param limit_app_store_versions: maximum number of related appStoreVersions returned (when they are included)
        :type limit_app_store_versions: int
        :param limit_pre_release_versions: maximum number of related preReleaseVersions returned (when they are included)
        :type limit_pre_release_versions: int
        :param limit_beta_app_localizations: maximum number of related betaAppLocalizations returned (when they are included)
        :type limit_beta_app_localizations: int
        :param limit_builds: maximum number of related builds returned (when they are included)
        :type limit_builds: int
        :param limit_app_infos: maximum number of related appInfos returned (when they are included)
        :type limit_app_infos: int
        :param limit_app_clips: maximum number of related appClips returned (when they are included)
        :type limit_app_clips: int
        :param limit_in_app_purchases: maximum number of related inAppPurchases returned (when they are included)
        :type limit_in_app_purchases: int
        :param limit_subscription_groups: maximum number of related subscriptionGroups returned (when they are included)
        :type limit_subscription_groups: int
        :param limit_game_center_enabled_versions: maximum number of related gameCenterEnabledVersions returned (when they are included)
        :type limit_game_center_enabled_versions: int
        :param limit_app_custom_product_pages: maximum number of related appCustomProductPages returned (when they are included)
        :type limit_app_custom_product_pages: int
        :param limit_in_app_purchases_v2: maximum number of related inAppPurchasesV2 returned (when they are included)
        :type limit_in_app_purchases_v2: int
        :param limit_promoted_purchases: maximum number of related promotedPurchases returned (when they are included)
        :type limit_promoted_purchases: int
        :param limit_app_events: maximum number of related appEvents returned (when they are included)
        :type limit_app_events: int
        :param limit_review_submissions: maximum number of related reviewSubmissions returned (when they are included)
        :type limit_review_submissions: int
        :param limit_app_store_version_experiments_v2: maximum number of related appStoreVersionExperimentsV2 returned (when they are included)
        :type limit_app_store_version_experiments_v2: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_app_get_to_one_related_serialize(
            id=id,
            fields_apps=fields_apps,
            fields_app_encryption_declarations=fields_app_encryption_declarations,
            fields_ci_products=fields_ci_products,
            fields_beta_groups=fields_beta_groups,
            fields_app_store_versions=fields_app_store_versions,
            fields_pre_release_versions=fields_pre_release_versions,
            fields_beta_app_localizations=fields_beta_app_localizations,
            fields_builds=fields_builds,
            fields_beta_license_agreements=fields_beta_license_agreements,
            fields_beta_app_review_details=fields_beta_app_review_details,
            fields_app_infos=fields_app_infos,
            fields_app_clips=fields_app_clips,
            fields_end_user_license_agreements=fields_end_user_license_agreements,
            fields_in_app_purchases=fields_in_app_purchases,
            fields_subscription_groups=fields_subscription_groups,
            fields_game_center_enabled_versions=fields_game_center_enabled_versions,
            fields_app_custom_product_pages=fields_app_custom_product_pages,
            fields_promoted_purchases=fields_promoted_purchases,
            fields_app_events=fields_app_events,
            fields_review_submissions=fields_review_submissions,
            fields_subscription_grace_periods=fields_subscription_grace_periods,
            fields_game_center_details=fields_game_center_details,
            fields_app_store_version_experiments=fields_app_store_version_experiments,
            include=include,
            limit_app_encryption_declarations=limit_app_encryption_declarations,
            limit_beta_groups=limit_beta_groups,
            limit_app_store_versions=limit_app_store_versions,
            limit_pre_release_versions=limit_pre_release_versions,
            limit_beta_app_localizations=limit_beta_app_localizations,
            limit_builds=limit_builds,
            limit_app_infos=limit_app_infos,
            limit_app_clips=limit_app_clips,
            limit_in_app_purchases=limit_in_app_purchases,
            limit_subscription_groups=limit_subscription_groups,
            limit_game_center_enabled_versions=limit_game_center_enabled_versions,
            limit_app_custom_product_pages=limit_app_custom_product_pages,
            limit_in_app_purchases_v2=limit_in_app_purchases_v2,
            limit_promoted_purchases=limit_promoted_purchases,
            limit_app_events=limit_app_events,
            limit_review_submissions=limit_review_submissions,
            limit_app_store_version_experiments_v2=limit_app_store_version_experiments_v2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "AppResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_app_get_to_one_related_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_app_encryption_declarations: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appEncryptionDeclarations")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_beta_groups: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaGroups")] = None,
        fields_app_store_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appStoreVersions")] = None,
        fields_pre_release_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type preReleaseVersions")] = None,
        fields_beta_app_localizations: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaAppLocalizations")] = None,
        fields_builds: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type builds")] = None,
        fields_beta_license_agreements: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaLicenseAgreements")] = None,
        fields_beta_app_review_details: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type betaAppReviewDetails")] = None,
        fields_app_infos: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appInfos")] = None,
        fields_app_clips: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appClips")] = None,
        fields_end_user_license_agreements: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type endUserLicenseAgreements")] = None,
        fields_in_app_purchases: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type inAppPurchases")] = None,
        fields_subscription_groups: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type subscriptionGroups")] = None,
        fields_game_center_enabled_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type gameCenterEnabledVersions")] = None,
        fields_app_custom_product_pages: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appCustomProductPages")] = None,
        fields_promoted_purchases: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type promotedPurchases")] = None,
        fields_app_events: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appEvents")] = None,
        fields_review_submissions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type reviewSubmissions")] = None,
        fields_subscription_grace_periods: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type subscriptionGracePeriods")] = None,
        fields_game_center_details: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type gameCenterDetails")] = None,
        fields_app_store_version_experiments: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type appStoreVersionExperiments")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_app_encryption_declarations: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appEncryptionDeclarations returned (when they are included)")] = None,
        limit_beta_groups: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related betaGroups returned (when they are included)")] = None,
        limit_app_store_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appStoreVersions returned (when they are included)")] = None,
        limit_pre_release_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related preReleaseVersions returned (when they are included)")] = None,
        limit_beta_app_localizations: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related betaAppLocalizations returned (when they are included)")] = None,
        limit_builds: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related builds returned (when they are included)")] = None,
        limit_app_infos: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appInfos returned (when they are included)")] = None,
        limit_app_clips: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appClips returned (when they are included)")] = None,
        limit_in_app_purchases: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related inAppPurchases returned (when they are included)")] = None,
        limit_subscription_groups: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related subscriptionGroups returned (when they are included)")] = None,
        limit_game_center_enabled_versions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related gameCenterEnabledVersions returned (when they are included)")] = None,
        limit_app_custom_product_pages: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appCustomProductPages returned (when they are included)")] = None,
        limit_in_app_purchases_v2: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related inAppPurchasesV2 returned (when they are included)")] = None,
        limit_promoted_purchases: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related promotedPurchases returned (when they are included)")] = None,
        limit_app_events: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appEvents returned (when they are included)")] = None,
        limit_review_submissions: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related reviewSubmissions returned (when they are included)")] = None,
        limit_app_store_version_experiments_v2: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related appStoreVersionExperimentsV2 returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_app_get_to_one_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_app_encryption_declarations: the fields to include for returned resources of type appEncryptionDeclarations
        :type fields_app_encryption_declarations: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_beta_groups: the fields to include for returned resources of type betaGroups
        :type fields_beta_groups: List[str]
        :param fields_app_store_versions: the fields to include for returned resources of type appStoreVersions
        :type fields_app_store_versions: List[str]
        :param fields_pre_release_versions: the fields to include for returned resources of type preReleaseVersions
        :type fields_pre_release_versions: List[str]
        :param fields_beta_app_localizations: the fields to include for returned resources of type betaAppLocalizations
        :type fields_beta_app_localizations: List[str]
        :param fields_builds: the fields to include for returned resources of type builds
        :type fields_builds: List[str]
        :param fields_beta_license_agreements: the fields to include for returned resources of type betaLicenseAgreements
        :type fields_beta_license_agreements: List[str]
        :param fields_beta_app_review_details: the fields to include for returned resources of type betaAppReviewDetails
        :type fields_beta_app_review_details: List[str]
        :param fields_app_infos: the fields to include for returned resources of type appInfos
        :type fields_app_infos: List[str]
        :param fields_app_clips: the fields to include for returned resources of type appClips
        :type fields_app_clips: List[str]
        :param fields_end_user_license_agreements: the fields to include for returned resources of type endUserLicenseAgreements
        :type fields_end_user_license_agreements: List[str]
        :param fields_in_app_purchases: the fields to include for returned resources of type inAppPurchases
        :type fields_in_app_purchases: List[str]
        :param fields_subscription_groups: the fields to include for returned resources of type subscriptionGroups
        :type fields_subscription_groups: List[str]
        :param fields_game_center_enabled_versions: the fields to include for returned resources of type gameCenterEnabledVersions
        :type fields_game_center_enabled_versions: List[str]
        :param fields_app_custom_product_pages: the fields to include for returned resources of type appCustomProductPages
        :type fields_app_custom_product_pages: List[str]
        :param fields_promoted_purchases: the fields to include for returned resources of type promotedPurchases
        :type fields_promoted_purchases: List[str]
        :param fields_app_events: the fields to include for returned resources of type appEvents
        :type fields_app_events: List[str]
        :param fields_review_submissions: the fields to include for returned resources of type reviewSubmissions
        :type fields_review_submissions: List[str]
        :param fields_subscription_grace_periods: the fields to include for returned resources of type subscriptionGracePeriods
        :type fields_subscription_grace_periods: List[str]
        :param fields_game_center_details: the fields to include for returned resources of type gameCenterDetails
        :type fields_game_center_details: List[str]
        :param fields_app_store_version_experiments: the fields to include for returned resources of type appStoreVersionExperiments
        :type fields_app_store_version_experiments: List[str]
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_app_encryption_declarations: maximum number of related appEncryptionDeclarations returned (when they are included)
        :type limit_app_encryption_declarations: int
        :param limit_beta_groups: maximum number of related betaGroups returned (when they are included)
        :type limit_beta_groups: int
        :param limit_app_store_versions: maximum number of related appStoreVersions returned (when they are included)
        :type limit_app_store_versions: int
        :param limit_pre_release_versions: maximum number of related preReleaseVersions returned (when they are included)
        :type limit_pre_release_versions: int
        :param limit_beta_app_localizations: maximum number of related betaAppLocalizations returned (when they are included)
        :type limit_beta_app_localizations: int
        :param limit_builds: maximum number of related builds returned (when they are included)
        :type limit_builds: int
        :param limit_app_infos: maximum number of related appInfos returned (when they are included)
        :type limit_app_infos: int
        :param limit_app_clips: maximum number of related appClips returned (when they are included)
        :type limit_app_clips: int
        :param limit_in_app_purchases: maximum number of related inAppPurchases returned (when they are included)
        :type limit_in_app_purchases: int
        :param limit_subscription_groups: maximum number of related subscriptionGroups returned (when they are included)
        :type limit_subscription_groups: int
        :param limit_game_center_enabled_versions: maximum number of related gameCenterEnabledVersions returned (when they are included)
        :type limit_game_center_enabled_versions: int
        :param limit_app_custom_product_pages: maximum number of related appCustomProductPages returned (when they are included)
        :type limit_app_custom_product_pages: int
        :param limit_in_app_purchases_v2: maximum number of related inAppPurchasesV2 returned (when they are included)
        :type limit_in_app_purchases_v2: int
        :param limit_promoted_purchases: maximum number of related promotedPurchases returned (when they are included)
        :type limit_promoted_purchases: int
        :param limit_app_events: maximum number of related appEvents returned (when they are included)
        :type limit_app_events: int
        :param limit_review_submissions: maximum number of related reviewSubmissions returned (when they are included)
        :type limit_review_submissions: int
        :param limit_app_store_version_experiments_v2: maximum number of related appStoreVersionExperimentsV2 returned (when they are included)
        :type limit_app_store_version_experiments_v2: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_app_get_to_one_related_serialize(
            id=id,
            fields_apps=fields_apps,
            fields_app_encryption_declarations=fields_app_encryption_declarations,
            fields_ci_products=fields_ci_products,
            fields_beta_groups=fields_beta_groups,
            fields_app_store_versions=fields_app_store_versions,
            fields_pre_release_versions=fields_pre_release_versions,
            fields_beta_app_localizations=fields_beta_app_localizations,
            fields_builds=fields_builds,
            fields_beta_license_agreements=fields_beta_license_agreements,
            fields_beta_app_review_details=fields_beta_app_review_details,
            fields_app_infos=fields_app_infos,
            fields_app_clips=fields_app_clips,
            fields_end_user_license_agreements=fields_end_user_license_agreements,
            fields_in_app_purchases=fields_in_app_purchases,
            fields_subscription_groups=fields_subscription_groups,
            fields_game_center_enabled_versions=fields_game_center_enabled_versions,
            fields_app_custom_product_pages=fields_app_custom_product_pages,
            fields_promoted_purchases=fields_promoted_purchases,
            fields_app_events=fields_app_events,
            fields_review_submissions=fields_review_submissions,
            fields_subscription_grace_periods=fields_subscription_grace_periods,
            fields_game_center_details=fields_game_center_details,
            fields_app_store_version_experiments=fields_app_store_version_experiments,
            include=include,
            limit_app_encryption_declarations=limit_app_encryption_declarations,
            limit_beta_groups=limit_beta_groups,
            limit_app_store_versions=limit_app_store_versions,
            limit_pre_release_versions=limit_pre_release_versions,
            limit_beta_app_localizations=limit_beta_app_localizations,
            limit_builds=limit_builds,
            limit_app_infos=limit_app_infos,
            limit_app_clips=limit_app_clips,
            limit_in_app_purchases=limit_in_app_purchases,
            limit_subscription_groups=limit_subscription_groups,
            limit_game_center_enabled_versions=limit_game_center_enabled_versions,
            limit_app_custom_product_pages=limit_app_custom_product_pages,
            limit_in_app_purchases_v2=limit_in_app_purchases_v2,
            limit_promoted_purchases=limit_promoted_purchases,
            limit_app_events=limit_app_events,
            limit_review_submissions=limit_review_submissions,
            limit_app_store_version_experiments_v2=limit_app_store_version_experiments_v2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "AppResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_app_get_to_one_related_serialize(
        self,
        id,
        fields_apps,
        fields_app_encryption_declarations,
        fields_ci_products,
        fields_beta_groups,
        fields_app_store_versions,
        fields_pre_release_versions,
        fields_beta_app_localizations,
        fields_builds,
        fields_beta_license_agreements,
        fields_beta_app_review_details,
        fields_app_infos,
        fields_app_clips,
        fields_end_user_license_agreements,
        fields_in_app_purchases,
        fields_subscription_groups,
        fields_game_center_enabled_versions,
        fields_app_custom_product_pages,
        fields_promoted_purchases,
        fields_app_events,
        fields_review_submissions,
        fields_subscription_grace_periods,
        fields_game_center_details,
        fields_app_store_version_experiments,
        include,
        limit_app_encryption_declarations,
        limit_beta_groups,
        limit_app_store_versions,
        limit_pre_release_versions,
        limit_beta_app_localizations,
        limit_builds,
        limit_app_infos,
        limit_app_clips,
        limit_in_app_purchases,
        limit_subscription_groups,
        limit_game_center_enabled_versions,
        limit_app_custom_product_pages,
        limit_in_app_purchases_v2,
        limit_promoted_purchases,
        limit_app_events,
        limit_review_submissions,
        limit_app_store_version_experiments_v2,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'fields[apps]': 'csv',
            'fields[appEncryptionDeclarations]': 'csv',
            'fields[ciProducts]': 'csv',
            'fields[betaGroups]': 'csv',
            'fields[appStoreVersions]': 'csv',
            'fields[preReleaseVersions]': 'csv',
            'fields[betaAppLocalizations]': 'csv',
            'fields[builds]': 'csv',
            'fields[betaLicenseAgreements]': 'csv',
            'fields[betaAppReviewDetails]': 'csv',
            'fields[appInfos]': 'csv',
            'fields[appClips]': 'csv',
            'fields[endUserLicenseAgreements]': 'csv',
            'fields[inAppPurchases]': 'csv',
            'fields[subscriptionGroups]': 'csv',
            'fields[gameCenterEnabledVersions]': 'csv',
            'fields[appCustomProductPages]': 'csv',
            'fields[promotedPurchases]': 'csv',
            'fields[appEvents]': 'csv',
            'fields[reviewSubmissions]': 'csv',
            'fields[subscriptionGracePeriods]': 'csv',
            'fields[gameCenterDetails]': 'csv',
            'fields[appStoreVersionExperiments]': 'csv',
            'include': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if fields_apps is not None:
            
            _query_params.append(('fields[apps]', fields_apps))
            
        if fields_app_encryption_declarations is not None:
            
            _query_params.append(('fields[appEncryptionDeclarations]', fields_app_encryption_declarations))
            
        if fields_ci_products is not None:
            
            _query_params.append(('fields[ciProducts]', fields_ci_products))
            
        if fields_beta_groups is not None:
            
            _query_params.append(('fields[betaGroups]', fields_beta_groups))
            
        if fields_app_store_versions is not None:
            
            _query_params.append(('fields[appStoreVersions]', fields_app_store_versions))
            
        if fields_pre_release_versions is not None:
            
            _query_params.append(('fields[preReleaseVersions]', fields_pre_release_versions))
            
        if fields_beta_app_localizations is not None:
            
            _query_params.append(('fields[betaAppLocalizations]', fields_beta_app_localizations))
            
        if fields_builds is not None:
            
            _query_params.append(('fields[builds]', fields_builds))
            
        if fields_beta_license_agreements is not None:
            
            _query_params.append(('fields[betaLicenseAgreements]', fields_beta_license_agreements))
            
        if fields_beta_app_review_details is not None:
            
            _query_params.append(('fields[betaAppReviewDetails]', fields_beta_app_review_details))
            
        if fields_app_infos is not None:
            
            _query_params.append(('fields[appInfos]', fields_app_infos))
            
        if fields_app_clips is not None:
            
            _query_params.append(('fields[appClips]', fields_app_clips))
            
        if fields_end_user_license_agreements is not None:
            
            _query_params.append(('fields[endUserLicenseAgreements]', fields_end_user_license_agreements))
            
        if fields_in_app_purchases is not None:
            
            _query_params.append(('fields[inAppPurchases]', fields_in_app_purchases))
            
        if fields_subscription_groups is not None:
            
            _query_params.append(('fields[subscriptionGroups]', fields_subscription_groups))
            
        if fields_game_center_enabled_versions is not None:
            
            _query_params.append(('fields[gameCenterEnabledVersions]', fields_game_center_enabled_versions))
            
        if fields_app_custom_product_pages is not None:
            
            _query_params.append(('fields[appCustomProductPages]', fields_app_custom_product_pages))
            
        if fields_promoted_purchases is not None:
            
            _query_params.append(('fields[promotedPurchases]', fields_promoted_purchases))
            
        if fields_app_events is not None:
            
            _query_params.append(('fields[appEvents]', fields_app_events))
            
        if fields_review_submissions is not None:
            
            _query_params.append(('fields[reviewSubmissions]', fields_review_submissions))
            
        if fields_subscription_grace_periods is not None:
            
            _query_params.append(('fields[subscriptionGracePeriods]', fields_subscription_grace_periods))
            
        if fields_game_center_details is not None:
            
            _query_params.append(('fields[gameCenterDetails]', fields_game_center_details))
            
        if fields_app_store_version_experiments is not None:
            
            _query_params.append(('fields[appStoreVersionExperiments]', fields_app_store_version_experiments))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if limit_app_encryption_declarations is not None:
            
            _query_params.append(('limit[appEncryptionDeclarations]', limit_app_encryption_declarations))
            
        if limit_beta_groups is not None:
            
            _query_params.append(('limit[betaGroups]', limit_beta_groups))
            
        if limit_app_store_versions is not None:
            
            _query_params.append(('limit[appStoreVersions]', limit_app_store_versions))
            
        if limit_pre_release_versions is not None:
            
            _query_params.append(('limit[preReleaseVersions]', limit_pre_release_versions))
            
        if limit_beta_app_localizations is not None:
            
            _query_params.append(('limit[betaAppLocalizations]', limit_beta_app_localizations))
            
        if limit_builds is not None:
            
            _query_params.append(('limit[builds]', limit_builds))
            
        if limit_app_infos is not None:
            
            _query_params.append(('limit[appInfos]', limit_app_infos))
            
        if limit_app_clips is not None:
            
            _query_params.append(('limit[appClips]', limit_app_clips))
            
        if limit_in_app_purchases is not None:
            
            _query_params.append(('limit[inAppPurchases]', limit_in_app_purchases))
            
        if limit_subscription_groups is not None:
            
            _query_params.append(('limit[subscriptionGroups]', limit_subscription_groups))
            
        if limit_game_center_enabled_versions is not None:
            
            _query_params.append(('limit[gameCenterEnabledVersions]', limit_game_center_enabled_versions))
            
        if limit_app_custom_product_pages is not None:
            
            _query_params.append(('limit[appCustomProductPages]', limit_app_custom_product_pages))
            
        if limit_in_app_purchases_v2 is not None:
            
            _query_params.append(('limit[inAppPurchasesV2]', limit_in_app_purchases_v2))
            
        if limit_promoted_purchases is not None:
            
            _query_params.append(('limit[promotedPurchases]', limit_promoted_purchases))
            
        if limit_app_events is not None:
            
            _query_params.append(('limit[appEvents]', limit_app_events))
            
        if limit_review_submissions is not None:
            
            _query_params.append(('limit[reviewSubmissions]', limit_review_submissions))
            
        if limit_app_store_version_experiments_v2 is not None:
            
            _query_params.append(('limit[appStoreVersionExperimentsV2]', limit_app_store_version_experiments_v2))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/app',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_app_get_to_one_relationship(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiProductAppLinkageResponse:
        """ci_products_app_get_to_one_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_app_get_to_one_relationship_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductAppLinkageResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_app_get_to_one_relationship_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiProductAppLinkageResponse]:
        """ci_products_app_get_to_one_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_app_get_to_one_relationship_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductAppLinkageResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_app_get_to_one_relationship_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_app_get_to_one_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_app_get_to_one_relationship_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductAppLinkageResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_app_get_to_one_relationship_serialize(
        self,
        id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/relationships/app',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_build_runs_get_to_many_related(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_builds: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s) of related 'builds'")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of sort expressions; resources will be sorted as specified")] = None,
        fields_ci_build_runs: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciBuildRuns")] = None,
        fields_builds: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type builds")] = None,
        fields_ci_workflows: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciWorkflows")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        fields_scm_pull_requests: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmPullRequests")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_builds: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related builds returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiBuildRunsResponse:
        """ci_products_build_runs_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_builds: filter by id(s) of related 'builds'
        :type filter_builds: List[str]
        :param sort: comma-separated list of sort expressions; resources will be sorted as specified
        :type sort: List[str]
        :param fields_ci_build_runs: the fields to include for returned resources of type ciBuildRuns
        :type fields_ci_build_runs: List[str]
        :param fields_builds: the fields to include for returned resources of type builds
        :type fields_builds: List[str]
        :param fields_ci_workflows: the fields to include for returned resources of type ciWorkflows
        :type fields_ci_workflows: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param fields_scm_pull_requests: the fields to include for returned resources of type scmPullRequests
        :type fields_scm_pull_requests: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_builds: maximum number of related builds returned (when they are included)
        :type limit_builds: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_build_runs_get_to_many_related_serialize(
            id=id,
            filter_builds=filter_builds,
            sort=sort,
            fields_ci_build_runs=fields_ci_build_runs,
            fields_builds=fields_builds,
            fields_ci_workflows=fields_ci_workflows,
            fields_ci_products=fields_ci_products,
            fields_scm_git_references=fields_scm_git_references,
            fields_scm_pull_requests=fields_scm_pull_requests,
            limit=limit,
            include=include,
            limit_builds=limit_builds,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiBuildRunsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_build_runs_get_to_many_related_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_builds: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s) of related 'builds'")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of sort expressions; resources will be sorted as specified")] = None,
        fields_ci_build_runs: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciBuildRuns")] = None,
        fields_builds: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type builds")] = None,
        fields_ci_workflows: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciWorkflows")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        fields_scm_pull_requests: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmPullRequests")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_builds: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related builds returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiBuildRunsResponse]:
        """ci_products_build_runs_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_builds: filter by id(s) of related 'builds'
        :type filter_builds: List[str]
        :param sort: comma-separated list of sort expressions; resources will be sorted as specified
        :type sort: List[str]
        :param fields_ci_build_runs: the fields to include for returned resources of type ciBuildRuns
        :type fields_ci_build_runs: List[str]
        :param fields_builds: the fields to include for returned resources of type builds
        :type fields_builds: List[str]
        :param fields_ci_workflows: the fields to include for returned resources of type ciWorkflows
        :type fields_ci_workflows: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param fields_scm_pull_requests: the fields to include for returned resources of type scmPullRequests
        :type fields_scm_pull_requests: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_builds: maximum number of related builds returned (when they are included)
        :type limit_builds: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_build_runs_get_to_many_related_serialize(
            id=id,
            filter_builds=filter_builds,
            sort=sort,
            fields_ci_build_runs=fields_ci_build_runs,
            fields_builds=fields_builds,
            fields_ci_workflows=fields_ci_workflows,
            fields_ci_products=fields_ci_products,
            fields_scm_git_references=fields_scm_git_references,
            fields_scm_pull_requests=fields_scm_pull_requests,
            limit=limit,
            include=include,
            limit_builds=limit_builds,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiBuildRunsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_build_runs_get_to_many_related_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_builds: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s) of related 'builds'")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of sort expressions; resources will be sorted as specified")] = None,
        fields_ci_build_runs: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciBuildRuns")] = None,
        fields_builds: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type builds")] = None,
        fields_ci_workflows: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciWorkflows")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        fields_scm_pull_requests: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmPullRequests")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_builds: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related builds returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_build_runs_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_builds: filter by id(s) of related 'builds'
        :type filter_builds: List[str]
        :param sort: comma-separated list of sort expressions; resources will be sorted as specified
        :type sort: List[str]
        :param fields_ci_build_runs: the fields to include for returned resources of type ciBuildRuns
        :type fields_ci_build_runs: List[str]
        :param fields_builds: the fields to include for returned resources of type builds
        :type fields_builds: List[str]
        :param fields_ci_workflows: the fields to include for returned resources of type ciWorkflows
        :type fields_ci_workflows: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param fields_scm_pull_requests: the fields to include for returned resources of type scmPullRequests
        :type fields_scm_pull_requests: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_builds: maximum number of related builds returned (when they are included)
        :type limit_builds: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_build_runs_get_to_many_related_serialize(
            id=id,
            filter_builds=filter_builds,
            sort=sort,
            fields_ci_build_runs=fields_ci_build_runs,
            fields_builds=fields_builds,
            fields_ci_workflows=fields_ci_workflows,
            fields_ci_products=fields_ci_products,
            fields_scm_git_references=fields_scm_git_references,
            fields_scm_pull_requests=fields_scm_pull_requests,
            limit=limit,
            include=include,
            limit_builds=limit_builds,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiBuildRunsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_build_runs_get_to_many_related_serialize(
        self,
        id,
        filter_builds,
        sort,
        fields_ci_build_runs,
        fields_builds,
        fields_ci_workflows,
        fields_ci_products,
        fields_scm_git_references,
        fields_scm_pull_requests,
        limit,
        include,
        limit_builds,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'filter[builds]': 'csv',
            'sort': 'csv',
            'fields[ciBuildRuns]': 'csv',
            'fields[builds]': 'csv',
            'fields[ciWorkflows]': 'csv',
            'fields[ciProducts]': 'csv',
            'fields[scmGitReferences]': 'csv',
            'fields[scmPullRequests]': 'csv',
            'include': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if filter_builds is not None:
            
            _query_params.append(('filter[builds]', filter_builds))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if fields_ci_build_runs is not None:
            
            _query_params.append(('fields[ciBuildRuns]', fields_ci_build_runs))
            
        if fields_builds is not None:
            
            _query_params.append(('fields[builds]', fields_builds))
            
        if fields_ci_workflows is not None:
            
            _query_params.append(('fields[ciWorkflows]', fields_ci_workflows))
            
        if fields_ci_products is not None:
            
            _query_params.append(('fields[ciProducts]', fields_ci_products))
            
        if fields_scm_git_references is not None:
            
            _query_params.append(('fields[scmGitReferences]', fields_scm_git_references))
            
        if fields_scm_pull_requests is not None:
            
            _query_params.append(('fields[scmPullRequests]', fields_scm_pull_requests))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if limit_builds is not None:
            
            _query_params.append(('limit[builds]', limit_builds))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/buildRuns',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_build_runs_get_to_many_relationship(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiProductBuildRunsLinkagesResponse:
        """ci_products_build_runs_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_build_runs_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductBuildRunsLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_build_runs_get_to_many_relationship_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiProductBuildRunsLinkagesResponse]:
        """ci_products_build_runs_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_build_runs_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductBuildRunsLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_build_runs_get_to_many_relationship_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_build_runs_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_build_runs_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductBuildRunsLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_build_runs_get_to_many_relationship_serialize(
        self,
        id,
        limit,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/relationships/buildRuns',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_delete_instance(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """ci_products_delete_instance


        :param id: the id of the requested resource (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_delete_instance_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '409': "ErrorResponse",
            '204': None,
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_delete_instance_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """ci_products_delete_instance


        :param id: the id of the requested resource (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_delete_instance_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '409': "ErrorResponse",
            '204': None,
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_delete_instance_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_delete_instance


        :param id: the id of the requested resource (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_delete_instance_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '409': "ErrorResponse",
            '204': None,
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_delete_instance_serialize(
        self,
        id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/v1/ciProducts/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_get_collection(
        self,
        filter_product_type: Annotated[Optional[List[StrictStr]], Field(description="filter by attribute 'productType'")] = None,
        filter_app: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s) of related 'app'")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_primary_repositories: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related primaryRepositories returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiProductsResponse:
        """ci_products_get_collection


        :param filter_product_type: filter by attribute 'productType'
        :type filter_product_type: List[str]
        :param filter_app: filter by id(s) of related 'app'
        :type filter_app: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_primary_repositories: maximum number of related primaryRepositories returned (when they are included)
        :type limit_primary_repositories: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_get_collection_serialize(
            filter_product_type=filter_product_type,
            filter_app=filter_app,
            fields_ci_products=fields_ci_products,
            fields_apps=fields_apps,
            fields_scm_repositories=fields_scm_repositories,
            limit=limit,
            include=include,
            limit_primary_repositories=limit_primary_repositories,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '200': "CiProductsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_get_collection_with_http_info(
        self,
        filter_product_type: Annotated[Optional[List[StrictStr]], Field(description="filter by attribute 'productType'")] = None,
        filter_app: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s) of related 'app'")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_primary_repositories: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related primaryRepositories returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiProductsResponse]:
        """ci_products_get_collection


        :param filter_product_type: filter by attribute 'productType'
        :type filter_product_type: List[str]
        :param filter_app: filter by id(s) of related 'app'
        :type filter_app: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_primary_repositories: maximum number of related primaryRepositories returned (when they are included)
        :type limit_primary_repositories: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_get_collection_serialize(
            filter_product_type=filter_product_type,
            filter_app=filter_app,
            fields_ci_products=fields_ci_products,
            fields_apps=fields_apps,
            fields_scm_repositories=fields_scm_repositories,
            limit=limit,
            include=include,
            limit_primary_repositories=limit_primary_repositories,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '200': "CiProductsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_get_collection_without_preload_content(
        self,
        filter_product_type: Annotated[Optional[List[StrictStr]], Field(description="filter by attribute 'productType'")] = None,
        filter_app: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s) of related 'app'")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_primary_repositories: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related primaryRepositories returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_get_collection


        :param filter_product_type: filter by attribute 'productType'
        :type filter_product_type: List[str]
        :param filter_app: filter by id(s) of related 'app'
        :type filter_app: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_primary_repositories: maximum number of related primaryRepositories returned (when they are included)
        :type limit_primary_repositories: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_get_collection_serialize(
            filter_product_type=filter_product_type,
            filter_app=filter_app,
            fields_ci_products=fields_ci_products,
            fields_apps=fields_apps,
            fields_scm_repositories=fields_scm_repositories,
            limit=limit,
            include=include,
            limit_primary_repositories=limit_primary_repositories,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '200': "CiProductsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_get_collection_serialize(
        self,
        filter_product_type,
        filter_app,
        fields_ci_products,
        fields_apps,
        fields_scm_repositories,
        limit,
        include,
        limit_primary_repositories,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'filter[productType]': 'csv',
            'filter[app]': 'csv',
            'fields[ciProducts]': 'csv',
            'fields[apps]': 'csv',
            'fields[scmRepositories]': 'csv',
            'include': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if filter_product_type is not None:
            
            _query_params.append(('filter[productType]', filter_product_type))
            
        if filter_app is not None:
            
            _query_params.append(('filter[app]', filter_app))
            
        if fields_ci_products is not None:
            
            _query_params.append(('fields[ciProducts]', fields_ci_products))
            
        if fields_apps is not None:
            
            _query_params.append(('fields[apps]', fields_apps))
            
        if fields_scm_repositories is not None:
            
            _query_params.append(('fields[scmRepositories]', fields_scm_repositories))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if limit_primary_repositories is not None:
            
            _query_params.append(('limit[primaryRepositories]', limit_primary_repositories))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_get_instance(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_primary_repositories: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related primaryRepositories returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiProductResponse:
        """ci_products_get_instance


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_primary_repositories: maximum number of related primaryRepositories returned (when they are included)
        :type limit_primary_repositories: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_get_instance_serialize(
            id=id,
            fields_ci_products=fields_ci_products,
            fields_apps=fields_apps,
            fields_scm_repositories=fields_scm_repositories,
            include=include,
            limit_primary_repositories=limit_primary_repositories,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_get_instance_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_primary_repositories: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related primaryRepositories returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiProductResponse]:
        """ci_products_get_instance


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_primary_repositories: maximum number of related primaryRepositories returned (when they are included)
        :type limit_primary_repositories: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_get_instance_serialize(
            id=id,
            fields_ci_products=fields_ci_products,
            fields_apps=fields_apps,
            fields_scm_repositories=fields_scm_repositories,
            include=include,
            limit_primary_repositories=limit_primary_repositories,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_get_instance_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_apps: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type apps")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        limit_primary_repositories: Annotated[Optional[Annotated[int, Field(le=50, strict=True)]], Field(description="maximum number of related primaryRepositories returned (when they are included)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_get_instance


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_apps: the fields to include for returned resources of type apps
        :type fields_apps: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param limit_primary_repositories: maximum number of related primaryRepositories returned (when they are included)
        :type limit_primary_repositories: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_get_instance_serialize(
            id=id,
            fields_ci_products=fields_ci_products,
            fields_apps=fields_apps,
            fields_scm_repositories=fields_scm_repositories,
            include=include,
            limit_primary_repositories=limit_primary_repositories,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_get_instance_serialize(
        self,
        id,
        fields_ci_products,
        fields_apps,
        fields_scm_repositories,
        include,
        limit_primary_repositories,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'fields[ciProducts]': 'csv',
            'fields[apps]': 'csv',
            'fields[scmRepositories]': 'csv',
            'include': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if fields_ci_products is not None:
            
            _query_params.append(('fields[ciProducts]', fields_ci_products))
            
        if fields_apps is not None:
            
            _query_params.append(('fields[apps]', fields_apps))
            
        if fields_scm_repositories is not None:
            
            _query_params.append(('fields[scmRepositories]', fields_scm_repositories))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if limit_primary_repositories is not None:
            
            _query_params.append(('limit[primaryRepositories]', limit_primary_repositories))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_primary_repositories_get_to_many_related(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_id: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s)")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_scm_providers: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmProviders")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ScmRepositoriesResponse:
        """ci_products_primary_repositories_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_id: filter by id(s)
        :type filter_id: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_scm_providers: the fields to include for returned resources of type scmProviders
        :type fields_scm_providers: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_primary_repositories_get_to_many_related_serialize(
            id=id,
            filter_id=filter_id,
            fields_scm_repositories=fields_scm_repositories,
            fields_scm_providers=fields_scm_providers,
            fields_scm_git_references=fields_scm_git_references,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "ScmRepositoriesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_primary_repositories_get_to_many_related_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_id: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s)")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_scm_providers: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmProviders")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ScmRepositoriesResponse]:
        """ci_products_primary_repositories_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_id: filter by id(s)
        :type filter_id: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_scm_providers: the fields to include for returned resources of type scmProviders
        :type fields_scm_providers: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_primary_repositories_get_to_many_related_serialize(
            id=id,
            filter_id=filter_id,
            fields_scm_repositories=fields_scm_repositories,
            fields_scm_providers=fields_scm_providers,
            fields_scm_git_references=fields_scm_git_references,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "ScmRepositoriesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_primary_repositories_get_to_many_related_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        filter_id: Annotated[Optional[List[StrictStr]], Field(description="filter by id(s)")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_scm_providers: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmProviders")] = None,
        fields_scm_git_references: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmGitReferences")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_primary_repositories_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param filter_id: filter by id(s)
        :type filter_id: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_scm_providers: the fields to include for returned resources of type scmProviders
        :type fields_scm_providers: List[str]
        :param fields_scm_git_references: the fields to include for returned resources of type scmGitReferences
        :type fields_scm_git_references: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_primary_repositories_get_to_many_related_serialize(
            id=id,
            filter_id=filter_id,
            fields_scm_repositories=fields_scm_repositories,
            fields_scm_providers=fields_scm_providers,
            fields_scm_git_references=fields_scm_git_references,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "ScmRepositoriesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_primary_repositories_get_to_many_related_serialize(
        self,
        id,
        filter_id,
        fields_scm_repositories,
        fields_scm_providers,
        fields_scm_git_references,
        limit,
        include,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'filter[id]': 'csv',
            'fields[scmRepositories]': 'csv',
            'fields[scmProviders]': 'csv',
            'fields[scmGitReferences]': 'csv',
            'include': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if filter_id is not None:
            
            _query_params.append(('filter[id]', filter_id))
            
        if fields_scm_repositories is not None:
            
            _query_params.append(('fields[scmRepositories]', fields_scm_repositories))
            
        if fields_scm_providers is not None:
            
            _query_params.append(('fields[scmProviders]', fields_scm_providers))
            
        if fields_scm_git_references is not None:
            
            _query_params.append(('fields[scmGitReferences]', fields_scm_git_references))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/primaryRepositories',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_primary_repositories_get_to_many_relationship(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiProductPrimaryRepositoriesLinkagesResponse:
        """ci_products_primary_repositories_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_primary_repositories_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductPrimaryRepositoriesLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_primary_repositories_get_to_many_relationship_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiProductPrimaryRepositoriesLinkagesResponse]:
        """ci_products_primary_repositories_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_primary_repositories_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductPrimaryRepositoriesLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_primary_repositories_get_to_many_relationship_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_primary_repositories_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_primary_repositories_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductPrimaryRepositoriesLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_primary_repositories_get_to_many_relationship_serialize(
        self,
        id,
        limit,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/relationships/primaryRepositories',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_workflows_get_to_many_related(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_ci_workflows: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciWorkflows")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_ci_xcode_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciXcodeVersions")] = None,
        fields_ci_mac_os_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciMacOsVersions")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiWorkflowsResponse:
        """ci_products_workflows_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_ci_workflows: the fields to include for returned resources of type ciWorkflows
        :type fields_ci_workflows: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_ci_xcode_versions: the fields to include for returned resources of type ciXcodeVersions
        :type fields_ci_xcode_versions: List[str]
        :param fields_ci_mac_os_versions: the fields to include for returned resources of type ciMacOsVersions
        :type fields_ci_mac_os_versions: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_workflows_get_to_many_related_serialize(
            id=id,
            fields_ci_workflows=fields_ci_workflows,
            fields_ci_products=fields_ci_products,
            fields_scm_repositories=fields_scm_repositories,
            fields_ci_xcode_versions=fields_ci_xcode_versions,
            fields_ci_mac_os_versions=fields_ci_mac_os_versions,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiWorkflowsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_workflows_get_to_many_related_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_ci_workflows: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciWorkflows")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_ci_xcode_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciXcodeVersions")] = None,
        fields_ci_mac_os_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciMacOsVersions")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiWorkflowsResponse]:
        """ci_products_workflows_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_ci_workflows: the fields to include for returned resources of type ciWorkflows
        :type fields_ci_workflows: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_ci_xcode_versions: the fields to include for returned resources of type ciXcodeVersions
        :type fields_ci_xcode_versions: List[str]
        :param fields_ci_mac_os_versions: the fields to include for returned resources of type ciMacOsVersions
        :type fields_ci_mac_os_versions: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_workflows_get_to_many_related_serialize(
            id=id,
            fields_ci_workflows=fields_ci_workflows,
            fields_ci_products=fields_ci_products,
            fields_scm_repositories=fields_scm_repositories,
            fields_ci_xcode_versions=fields_ci_xcode_versions,
            fields_ci_mac_os_versions=fields_ci_mac_os_versions,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiWorkflowsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_workflows_get_to_many_related_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        fields_ci_workflows: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciWorkflows")] = None,
        fields_ci_products: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciProducts")] = None,
        fields_scm_repositories: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type scmRepositories")] = None,
        fields_ci_xcode_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciXcodeVersions")] = None,
        fields_ci_mac_os_versions: Annotated[Optional[List[StrictStr]], Field(description="the fields to include for returned resources of type ciMacOsVersions")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        include: Annotated[Optional[List[StrictStr]], Field(description="comma-separated list of relationships to include")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_workflows_get_to_many_related


        :param id: the id of the requested resource (required)
        :type id: str
        :param fields_ci_workflows: the fields to include for returned resources of type ciWorkflows
        :type fields_ci_workflows: List[str]
        :param fields_ci_products: the fields to include for returned resources of type ciProducts
        :type fields_ci_products: List[str]
        :param fields_scm_repositories: the fields to include for returned resources of type scmRepositories
        :type fields_scm_repositories: List[str]
        :param fields_ci_xcode_versions: the fields to include for returned resources of type ciXcodeVersions
        :type fields_ci_xcode_versions: List[str]
        :param fields_ci_mac_os_versions: the fields to include for returned resources of type ciMacOsVersions
        :type fields_ci_mac_os_versions: List[str]
        :param limit: maximum resources per page
        :type limit: int
        :param include: comma-separated list of relationships to include
        :type include: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_workflows_get_to_many_related_serialize(
            id=id,
            fields_ci_workflows=fields_ci_workflows,
            fields_ci_products=fields_ci_products,
            fields_scm_repositories=fields_scm_repositories,
            fields_ci_xcode_versions=fields_ci_xcode_versions,
            fields_ci_mac_os_versions=fields_ci_mac_os_versions,
            limit=limit,
            include=include,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiWorkflowsResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_workflows_get_to_many_related_serialize(
        self,
        id,
        fields_ci_workflows,
        fields_ci_products,
        fields_scm_repositories,
        fields_ci_xcode_versions,
        fields_ci_mac_os_versions,
        limit,
        include,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'fields[ciWorkflows]': 'csv',
            'fields[ciProducts]': 'csv',
            'fields[scmRepositories]': 'csv',
            'fields[ciXcodeVersions]': 'csv',
            'fields[ciMacOsVersions]': 'csv',
            'include': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if fields_ci_workflows is not None:
            
            _query_params.append(('fields[ciWorkflows]', fields_ci_workflows))
            
        if fields_ci_products is not None:
            
            _query_params.append(('fields[ciProducts]', fields_ci_products))
            
        if fields_scm_repositories is not None:
            
            _query_params.append(('fields[scmRepositories]', fields_scm_repositories))
            
        if fields_ci_xcode_versions is not None:
            
            _query_params.append(('fields[ciXcodeVersions]', fields_ci_xcode_versions))
            
        if fields_ci_mac_os_versions is not None:
            
            _query_params.append(('fields[ciMacOsVersions]', fields_ci_mac_os_versions))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/workflows',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ci_products_workflows_get_to_many_relationship(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CiProductWorkflowsLinkagesResponse:
        """ci_products_workflows_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_workflows_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductWorkflowsLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ci_products_workflows_get_to_many_relationship_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CiProductWorkflowsLinkagesResponse]:
        """ci_products_workflows_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_workflows_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductWorkflowsLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ci_products_workflows_get_to_many_relationship_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="the id of the requested resource")],
        limit: Annotated[Optional[Annotated[int, Field(le=200, strict=True)]], Field(description="maximum resources per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ci_products_workflows_get_to_many_relationship


        :param id: the id of the requested resource (required)
        :type id: str
        :param limit: maximum resources per page
        :type limit: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ci_products_workflows_get_to_many_relationship_serialize(
            id=id,
            limit=limit,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '200': "CiProductWorkflowsLinkagesResponse",
            '429': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ci_products_workflows_get_to_many_relationship_serialize(
        self,
        id,
        limit,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'itc-bearer-token'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/ciProducts/{id}/relationships/workflows',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


