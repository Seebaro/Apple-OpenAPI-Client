# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.build_bundle import BuildBundle

class TestBuildBundle(unittest.TestCase):
    """BuildBundle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildBundle:
        """Test BuildBundle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildBundle`
        """
        model = BuildBundle()
        if include_optional:
            return BuildBundle(
                type = 'buildBundles',
                id = '',
                attributes = openapi_client.models.build_bundle_attributes.BuildBundle_attributes(
                    bundle_id = '', 
                    bundle_type = 'APP', 
                    sdk_build = '', 
                    platform_build = '', 
                    file_name = '', 
                    has_sirikit = True, 
                    has_on_demand_resources = True, 
                    has_prerendered_icon = True, 
                    uses_location_services = True, 
                    is_ios_build_mac_app_store_compatible = True, 
                    includes_symbols = True, 
                    d_sym_url = '', 
                    supported_architectures = [
                        ''
                        ], 
                    required_capabilities = [
                        ''
                        ], 
                    device_protocols = [
                        ''
                        ], 
                    locales = [
                        ''
                        ], 
                    entitlements = {
                        'key' : {
                            'key' : ''
                            }
                        }, 
                    ba_download_allowance = 56, 
                    ba_max_install_size = 56, ),
                relationships = openapi_client.models.build_bundle_relationships.BuildBundle_relationships(
                    app_clip_domain_cache_status = openapi_client.models.build_bundle_relationships_app_clip_domain_cache_status.BuildBundle_relationships_appClipDomainCacheStatus(
                        links = openapi_client.models.relationship_links.RelationshipLinks(
                            self = '', 
                            related = '', ), 
                        data = openapi_client.models.build_bundle_relationships_app_clip_domain_cache_status_data.BuildBundle_relationships_appClipDomainCacheStatus_data(
                            type = 'appClipDomainStatuses', 
                            id = '', ), ), 
                    app_clip_domain_debug_status = openapi_client.models.build_bundle_relationships_app_clip_domain_cache_status.BuildBundle_relationships_appClipDomainCacheStatus(), 
                    beta_app_clip_invocations = openapi_client.models.build_bundle_relationships_beta_app_clip_invocations.BuildBundle_relationships_betaAppClipInvocations(
                        meta = openapi_client.models.paging_information.PagingInformation(
                            paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                total = 56, 
                                limit = 56, 
                                next_cursor = '', ), ), ), 
                    build_bundle_file_sizes = openapi_client.models.build_bundle_relationships_build_bundle_file_sizes.BuildBundle_relationships_buildBundleFileSizes(), ),
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', )
            )
        else:
            return BuildBundle(
                type = 'buildBundles',
                id = '',
        )
        """

    def testBuildBundle(self):
        """Test BuildBundle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
