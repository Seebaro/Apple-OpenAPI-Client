# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_clip_advanced_experience_create_request_data_attributes import AppClipAdvancedExperienceCreateRequestDataAttributes

class TestAppClipAdvancedExperienceCreateRequestDataAttributes(unittest.TestCase):
    """AppClipAdvancedExperienceCreateRequestDataAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppClipAdvancedExperienceCreateRequestDataAttributes:
        """Test AppClipAdvancedExperienceCreateRequestDataAttributes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppClipAdvancedExperienceCreateRequestDataAttributes`
        """
        model = AppClipAdvancedExperienceCreateRequestDataAttributes()
        if include_optional:
            return AppClipAdvancedExperienceCreateRequestDataAttributes(
                link = '',
                action = 'OPEN',
                is_powered_by = True,
                place = openapi_client.models.app_clip_advanced_experience_attributes_place.AppClipAdvancedExperience_attributes_place(
                    place_id = '', 
                    names = [
                        ''
                        ], 
                    main_address = openapi_client.models.app_clip_advanced_experience_attributes_place_main_address.AppClipAdvancedExperience_attributes_place_mainAddress(
                        full_address = '', 
                        structured_address = openapi_client.models.app_clip_advanced_experience_attributes_place_main_address_structured_address.AppClipAdvancedExperience_attributes_place_mainAddress_structuredAddress(
                            street_address = [
                                ''
                                ], 
                            floor = '', 
                            neighborhood = '', 
                            locality = '', 
                            state_province = '', 
                            postal_code = '', 
                            country_code = '', ), ), 
                    display_point = openapi_client.models.app_clip_advanced_experience_attributes_place_display_point.AppClipAdvancedExperience_attributes_place_displayPoint(
                        coordinates = openapi_client.models.app_clip_advanced_experience_attributes_place_display_point_coordinates.AppClipAdvancedExperience_attributes_place_displayPoint_coordinates(
                            latitude = 1.337, 
                            longitude = 1.337, ), 
                        source = 'CALCULATED', ), 
                    map_action = 'BUY_TICKETS', 
                    relationship = 'OWNER', 
                    phone_number = openapi_client.models.app_clip_advanced_experience_attributes_place_phone_number.AppClipAdvancedExperience_attributes_place_phoneNumber(
                        number = '', 
                        type = 'FAX', 
                        intent = '', ), 
                    home_page = '', 
                    categories = [
                        ''
                        ], ),
                business_category = 'AUTOMOTIVE',
                default_language = 'AR'
            )
        else:
            return AppClipAdvancedExperienceCreateRequestDataAttributes(
                link = '',
                is_powered_by = True,
                default_language = 'AR',
        )
        """

    def testAppClipAdvancedExperienceCreateRequestDataAttributes(self):
        """Test AppClipAdvancedExperienceCreateRequestDataAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
