# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_offer_code_create_request import SubscriptionOfferCodeCreateRequest

class TestSubscriptionOfferCodeCreateRequest(unittest.TestCase):
    """SubscriptionOfferCodeCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionOfferCodeCreateRequest:
        """Test SubscriptionOfferCodeCreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionOfferCodeCreateRequest`
        """
        model = SubscriptionOfferCodeCreateRequest()
        if include_optional:
            return SubscriptionOfferCodeCreateRequest(
                data = openapi_client.models.subscription_offer_code_create_request_data.SubscriptionOfferCodeCreateRequest_data(
                    type = 'subscriptionOfferCodes', 
                    attributes = openapi_client.models.subscription_offer_code_create_request_data_attributes.SubscriptionOfferCodeCreateRequest_data_attributes(
                        name = '', 
                        customer_eligibilities = [
                            'NEW'
                            ], 
                        offer_eligibility = 'STACK_WITH_INTRO_OFFERS', 
                        duration = 'THREE_DAYS', 
                        offer_mode = 'PAY_AS_YOU_GO', 
                        number_of_periods = 56, ), 
                    relationships = openapi_client.models.subscription_offer_code_create_request_data_relationships.SubscriptionOfferCodeCreateRequest_data_relationships(
                        subscription = openapi_client.models.subscription_app_store_review_screenshot_create_request_data_relationships_subscription.SubscriptionAppStoreReviewScreenshotCreateRequest_data_relationships_subscription(
                            data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                                type = 'subscriptions', 
                                id = '', ), ), 
                        prices = openapi_client.models.subscription_offer_code_create_request_data_relationships_prices.SubscriptionOfferCodeCreateRequest_data_relationships_prices(
                            data = [
                                openapi_client.models.subscription_offer_code_relationships_prices_data_inner.SubscriptionOfferCode_relationships_prices_data_inner(
                                    type = 'subscriptionOfferCodePrices', 
                                    id = '', )
                                ], ), ), ),
                included = [
                    openapi_client.models.subscription_offer_code_price_inline_create.SubscriptionOfferCodePriceInlineCreate(
                        type = 'subscriptionOfferCodePrices', 
                        id = '', 
                        relationships = openapi_client.models.subscription_offer_code_price_relationships.SubscriptionOfferCodePrice_relationships(
                            territory = openapi_client.models.app_price_point_v3_relationships_territory.AppPricePointV3_relationships_territory(
                                data = openapi_client.models.app_price_point_v3_relationships_territory_data.AppPricePointV3_relationships_territory_data(
                                    type = 'territories', 
                                    id = '', ), ), 
                            subscription_price_point = openapi_client.models.subscription_introductory_offer_relationships_subscription_price_point.SubscriptionIntroductoryOffer_relationships_subscriptionPricePoint(), ), )
                    ]
            )
        else:
            return SubscriptionOfferCodeCreateRequest(
                data = openapi_client.models.subscription_offer_code_create_request_data.SubscriptionOfferCodeCreateRequest_data(
                    type = 'subscriptionOfferCodes', 
                    attributes = openapi_client.models.subscription_offer_code_create_request_data_attributes.SubscriptionOfferCodeCreateRequest_data_attributes(
                        name = '', 
                        customer_eligibilities = [
                            'NEW'
                            ], 
                        offer_eligibility = 'STACK_WITH_INTRO_OFFERS', 
                        duration = 'THREE_DAYS', 
                        offer_mode = 'PAY_AS_YOU_GO', 
                        number_of_periods = 56, ), 
                    relationships = openapi_client.models.subscription_offer_code_create_request_data_relationships.SubscriptionOfferCodeCreateRequest_data_relationships(
                        subscription = openapi_client.models.subscription_app_store_review_screenshot_create_request_data_relationships_subscription.SubscriptionAppStoreReviewScreenshotCreateRequest_data_relationships_subscription(
                            data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                                type = 'subscriptions', 
                                id = '', ), ), 
                        prices = openapi_client.models.subscription_offer_code_create_request_data_relationships_prices.SubscriptionOfferCodeCreateRequest_data_relationships_prices(
                            data = [
                                openapi_client.models.subscription_offer_code_relationships_prices_data_inner.SubscriptionOfferCode_relationships_prices_data_inner(
                                    type = 'subscriptionOfferCodePrices', 
                                    id = '', )
                                ], ), ), ),
        )
        """

    def testSubscriptionOfferCodeCreateRequest(self):
        """Test SubscriptionOfferCodeCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
