# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.webhook_delivery_response import WebhookDeliveryResponse

class TestWebhookDeliveryResponse(unittest.TestCase):
    """WebhookDeliveryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookDeliveryResponse:
        """Test WebhookDeliveryResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookDeliveryResponse`
        """
        model = WebhookDeliveryResponse()
        if include_optional:
            return WebhookDeliveryResponse(
                data = openapi_client.models.webhook_delivery.WebhookDelivery(
                    type = 'webhookDeliveries', 
                    id = '', 
                    attributes = openapi_client.models.webhook_delivery_attributes.WebhookDelivery_attributes(
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        delivery_state = 'SUCCEEDED', 
                        error_message = '', 
                        redelivery = True, 
                        sent_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        request = openapi_client.models.beta_app_clip_invocation_attributes.BetaAppClipInvocation_attributes(
                            url = '', ), 
                        response = openapi_client.models.webhook_delivery_attributes_response.WebhookDelivery_attributes_response(
                            http_status_code = 56, 
                            body = '', ), ), 
                    relationships = openapi_client.models.webhook_delivery_relationships.WebhookDelivery_relationships(
                        event = openapi_client.models.webhook_delivery_relationships_event.WebhookDelivery_relationships_event(
                            data = openapi_client.models.webhook_delivery_relationships_event_data.WebhookDelivery_relationships_event_data(
                                type = 'webhookEvents', 
                                id = '', ), ), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                included = [
                    openapi_client.models.webhook_event.WebhookEvent(
                        type = 'webhookEvents', 
                        id = '', 
                        attributes = openapi_client.models.webhook_event_attributes.WebhookEvent_attributes(
                            event_type = 'APP_STORE_VERSION_APP_VERSION_STATE_UPDATED', 
                            payload = '', 
                            ping = True, 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', )
            )
        else:
            return WebhookDeliveryResponse(
                data = openapi_client.models.webhook_delivery.WebhookDelivery(
                    type = 'webhookDeliveries', 
                    id = '', 
                    attributes = openapi_client.models.webhook_delivery_attributes.WebhookDelivery_attributes(
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        delivery_state = 'SUCCEEDED', 
                        error_message = '', 
                        redelivery = True, 
                        sent_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        request = openapi_client.models.beta_app_clip_invocation_attributes.BetaAppClipInvocation_attributes(
                            url = '', ), 
                        response = openapi_client.models.webhook_delivery_attributes_response.WebhookDelivery_attributes_response(
                            http_status_code = 56, 
                            body = '', ), ), 
                    relationships = openapi_client.models.webhook_delivery_relationships.WebhookDelivery_relationships(
                        event = openapi_client.models.webhook_delivery_relationships_event.WebhookDelivery_relationships_event(
                            data = openapi_client.models.webhook_delivery_relationships_event_data.WebhookDelivery_relationships_event_data(
                                type = 'webhookEvents', 
                                id = '', ), ), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', ),
        )
        """

    def testWebhookDeliveryResponse(self):
        """Test WebhookDeliveryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
