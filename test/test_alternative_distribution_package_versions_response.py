# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alternative_distribution_package_versions_response import AlternativeDistributionPackageVersionsResponse

class TestAlternativeDistributionPackageVersionsResponse(unittest.TestCase):
    """AlternativeDistributionPackageVersionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlternativeDistributionPackageVersionsResponse:
        """Test AlternativeDistributionPackageVersionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlternativeDistributionPackageVersionsResponse`
        """
        model = AlternativeDistributionPackageVersionsResponse()
        if include_optional:
            return AlternativeDistributionPackageVersionsResponse(
                data = [
                    openapi_client.models.alternative_distribution_package_version.AlternativeDistributionPackageVersion(
                        type = 'alternativeDistributionPackageVersions', 
                        id = '', 
                        attributes = openapi_client.models.alternative_distribution_package_version_attributes.AlternativeDistributionPackageVersion_attributes(
                            url = '', 
                            url_expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            version = '', 
                            file_checksum = '', 
                            state = 'COMPLETED', ), 
                        relationships = openapi_client.models.alternative_distribution_package_version_relationships.AlternativeDistributionPackageVersion_relationships(
                            variants = openapi_client.models.alternative_distribution_package_version_relationships_variants.AlternativeDistributionPackageVersion_relationships_variants(
                                links = openapi_client.models.relationship_links.RelationshipLinks(
                                    self = '', 
                                    related = '', ), 
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        total = 56, 
                                        limit = 56, 
                                        next_cursor = '', ), ), 
                                data = [
                                    openapi_client.models.alternative_distribution_package_version_relationships_variants_data_inner.AlternativeDistributionPackageVersion_relationships_variants_data_inner(
                                        type = 'alternativeDistributionPackageVariants', 
                                        id = '', )
                                    ], ), 
                            deltas = openapi_client.models.alternative_distribution_package_version_relationships_deltas.AlternativeDistributionPackageVersion_relationships_deltas(), 
                            alternative_distribution_package = openapi_client.models.alternative_distribution_package_version_relationships_alternative_distribution_package.AlternativeDistributionPackageVersion_relationships_alternativeDistributionPackage(), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                included = [
                    null
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        total = 56, 
                        limit = 56, 
                        next_cursor = '', ), )
            )
        else:
            return AlternativeDistributionPackageVersionsResponse(
                data = [
                    openapi_client.models.alternative_distribution_package_version.AlternativeDistributionPackageVersion(
                        type = 'alternativeDistributionPackageVersions', 
                        id = '', 
                        attributes = openapi_client.models.alternative_distribution_package_version_attributes.AlternativeDistributionPackageVersion_attributes(
                            url = '', 
                            url_expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            version = '', 
                            file_checksum = '', 
                            state = 'COMPLETED', ), 
                        relationships = openapi_client.models.alternative_distribution_package_version_relationships.AlternativeDistributionPackageVersion_relationships(
                            variants = openapi_client.models.alternative_distribution_package_version_relationships_variants.AlternativeDistributionPackageVersion_relationships_variants(
                                links = openapi_client.models.relationship_links.RelationshipLinks(
                                    self = '', 
                                    related = '', ), 
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        total = 56, 
                                        limit = 56, 
                                        next_cursor = '', ), ), 
                                data = [
                                    openapi_client.models.alternative_distribution_package_version_relationships_variants_data_inner.AlternativeDistributionPackageVersion_relationships_variants_data_inner(
                                        type = 'alternativeDistributionPackageVariants', 
                                        id = '', )
                                    ], ), 
                            deltas = openapi_client.models.alternative_distribution_package_version_relationships_deltas.AlternativeDistributionPackageVersion_relationships_deltas(), 
                            alternative_distribution_package = openapi_client.models.alternative_distribution_package_version_relationships_alternative_distribution_package.AlternativeDistributionPackageVersion_relationships_alternativeDistributionPackage(), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
        )
        """

    def testAlternativeDistributionPackageVersionsResponse(self):
        """Test AlternativeDistributionPackageVersionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
