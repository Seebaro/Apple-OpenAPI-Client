# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_achievement_image import GameCenterAchievementImage

class TestGameCenterAchievementImage(unittest.TestCase):
    """GameCenterAchievementImage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterAchievementImage:
        """Test GameCenterAchievementImage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterAchievementImage`
        """
        model = GameCenterAchievementImage()
        if include_optional:
            return GameCenterAchievementImage(
                type = 'gameCenterAchievementImages',
                id = '',
                attributes = openapi_client.models.game_center_achievement_image_attributes.GameCenterAchievementImage_attributes(
                    file_size = 56, 
                    file_name = '', 
                    image_asset = openapi_client.models.image_asset.ImageAsset(
                        template_url = '', 
                        width = 56, 
                        height = 56, ), 
                    upload_operations = [
                        openapi_client.models.upload_operation.UploadOperation(
                            method = '', 
                            url = '', 
                            length = 56, 
                            offset = 56, 
                            request_headers = [
                                openapi_client.models.http_header.HttpHeader(
                                    name = '', 
                                    value = '', )
                                ], )
                        ], 
                    asset_delivery_state = openapi_client.models.app_media_asset_state.AppMediaAssetState(
                        errors = [
                            openapi_client.models.app_media_state_error.AppMediaStateError(
                                code = '', 
                                description = '', )
                            ], 
                        warnings = [
                            openapi_client.models.app_media_state_error.AppMediaStateError(
                                code = '', 
                                description = '', )
                            ], 
                        state = 'AWAITING_UPLOAD', ), ),
                relationships = openapi_client.models.game_center_achievement_image_relationships.GameCenterAchievementImage_relationships(
                    game_center_achievement_localization = openapi_client.models.game_center_achievement_image_relationships_game_center_achievement_localization.GameCenterAchievementImage_relationships_gameCenterAchievementLocalization(
                        data = openapi_client.models.game_center_achievement_image_relationships_game_center_achievement_localization_data.GameCenterAchievementImage_relationships_gameCenterAchievementLocalization_data(
                            type = 'gameCenterAchievementLocalizations', 
                            id = '', ), ), ),
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', )
            )
        else:
            return GameCenterAchievementImage(
                type = 'gameCenterAchievementImages',
                id = '',
        )
        """

    def testGameCenterAchievementImage(self):
        """Test GameCenterAchievementImage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
