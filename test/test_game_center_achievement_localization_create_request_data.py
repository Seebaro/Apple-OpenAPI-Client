# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_achievement_localization_create_request_data import GameCenterAchievementLocalizationCreateRequestData

class TestGameCenterAchievementLocalizationCreateRequestData(unittest.TestCase):
    """GameCenterAchievementLocalizationCreateRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterAchievementLocalizationCreateRequestData:
        """Test GameCenterAchievementLocalizationCreateRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterAchievementLocalizationCreateRequestData`
        """
        model = GameCenterAchievementLocalizationCreateRequestData()
        if include_optional:
            return GameCenterAchievementLocalizationCreateRequestData(
                type = 'gameCenterAchievementLocalizations',
                attributes = openapi_client.models.game_center_achievement_localization_create_request_data_attributes.GameCenterAchievementLocalizationCreateRequest_data_attributes(
                    locale = '', 
                    name = '', 
                    before_earned_description = '', 
                    after_earned_description = '', ),
                relationships = openapi_client.models.game_center_achievement_localization_create_request_data_relationships.GameCenterAchievementLocalizationCreateRequest_data_relationships(
                    game_center_achievement = openapi_client.models.game_center_achievement_localization_create_request_data_relationships_game_center_achievement.GameCenterAchievementLocalizationCreateRequest_data_relationships_gameCenterAchievement(
                        data = openapi_client.models.game_center_achievement_localization_relationships_game_center_achievement_data.GameCenterAchievementLocalization_relationships_gameCenterAchievement_data(
                            type = 'gameCenterAchievements', 
                            id = '', ), ), )
            )
        else:
            return GameCenterAchievementLocalizationCreateRequestData(
                type = 'gameCenterAchievementLocalizations',
                attributes = openapi_client.models.game_center_achievement_localization_create_request_data_attributes.GameCenterAchievementLocalizationCreateRequest_data_attributes(
                    locale = '', 
                    name = '', 
                    before_earned_description = '', 
                    after_earned_description = '', ),
                relationships = openapi_client.models.game_center_achievement_localization_create_request_data_relationships.GameCenterAchievementLocalizationCreateRequest_data_relationships(
                    game_center_achievement = openapi_client.models.game_center_achievement_localization_create_request_data_relationships_game_center_achievement.GameCenterAchievementLocalizationCreateRequest_data_relationships_gameCenterAchievement(
                        data = openapi_client.models.game_center_achievement_localization_relationships_game_center_achievement_data.GameCenterAchievementLocalization_relationships_gameCenterAchievement_data(
                            type = 'gameCenterAchievements', 
                            id = '', ), ), ),
        )
        """

    def testGameCenterAchievementLocalizationCreateRequestData(self):
        """Test GameCenterAchievementLocalizationCreateRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
