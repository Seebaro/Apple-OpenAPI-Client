# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_matchmaking_rule_set_test_create_request_included_inner import GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner

class TestGameCenterMatchmakingRuleSetTestCreateRequestIncludedInner(unittest.TestCase):
    """GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner:
        """Test GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner`
        """
        model = GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner()
        if include_optional:
            return GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner(
                type = 'gameCenterMatchmakingTestPlayerProperties',
                id = '',
                attributes = openapi_client.models.game_center_matchmaking_test_request_inline_create_attributes.GameCenterMatchmakingTestRequestInlineCreate_attributes(
                    request_name = '', 
                    seconds_in_queue = 56, 
                    locale = 'AR-SA', 
                    location = openapi_client.models.location.Location(
                        latitude = 1.337, 
                        longitude = 1.337, ), 
                    min_players = 56, 
                    max_players = 56, 
                    player_count = 56, 
                    bundle_id = '', 
                    platform = 'IOS', 
                    app_version = '', ),
                relationships = openapi_client.models.game_center_matchmaking_test_request_inline_create_relationships.GameCenterMatchmakingTestRequestInlineCreate_relationships(
                    matchmaking_player_properties = openapi_client.models.game_center_matchmaking_test_request_inline_create_relationships_matchmaking_player_properties.GameCenterMatchmakingTestRequestInlineCreate_relationships_matchmakingPlayerProperties(
                        data = [
                            openapi_client.models.game_center_matchmaking_test_request_inline_create_relationships_matchmaking_player_properties_data_inner.GameCenterMatchmakingTestRequestInlineCreate_relationships_matchmakingPlayerProperties_data_inner(
                                type = 'gameCenterMatchmakingTestPlayerProperties', 
                                id = '', )
                            ], ), )
            )
        else:
            return GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner(
                type = 'gameCenterMatchmakingTestPlayerProperties',
                attributes = openapi_client.models.game_center_matchmaking_test_request_inline_create_attributes.GameCenterMatchmakingTestRequestInlineCreate_attributes(
                    request_name = '', 
                    seconds_in_queue = 56, 
                    locale = 'AR-SA', 
                    location = openapi_client.models.location.Location(
                        latitude = 1.337, 
                        longitude = 1.337, ), 
                    min_players = 56, 
                    max_players = 56, 
                    player_count = 56, 
                    bundle_id = '', 
                    platform = 'IOS', 
                    app_version = '', ),
        )
        """

    def testGameCenterMatchmakingRuleSetTestCreateRequestIncludedInner(self):
        """Test GameCenterMatchmakingRuleSetTestCreateRequestIncludedInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
