# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_detail_relationships import GameCenterDetailRelationships

class TestGameCenterDetailRelationships(unittest.TestCase):
    """GameCenterDetailRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterDetailRelationships:
        """Test GameCenterDetailRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterDetailRelationships`
        """
        model = GameCenterDetailRelationships()
        if include_optional:
            return GameCenterDetailRelationships(
                app = openapi_client.models.alternative_distribution_key_create_request_data_relationships_app.AlternativeDistributionKeyCreateRequest_data_relationships_app(
                    data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                        type = 'apps', 
                        id = '', ), ),
                game_center_app_versions = openapi_client.models.game_center_app_version_relationships_compatibility_versions.GameCenterAppVersion_relationships_compatibilityVersions(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_store_version_relationships_game_center_app_version_data.AppStoreVersion_relationships_gameCenterAppVersion_data(
                            type = 'gameCenterAppVersions', 
                            id = '', )
                        ], ),
                game_center_group = openapi_client.models.game_center_detail_relationships_game_center_group.GameCenterDetail_relationships_gameCenterGroup(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.game_center_achievement_relationships_game_center_group_data.GameCenterAchievement_relationships_gameCenterGroup_data(
                        type = 'gameCenterGroups', 
                        id = '', ), ),
                game_center_leaderboards = openapi_client.models.game_center_activity_relationships_leaderboards.GameCenterActivity_relationships_leaderboards(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_activity_relationships_leaderboards_data_inner.GameCenterActivity_relationships_leaderboards_data_inner(
                            type = 'gameCenterLeaderboards', 
                            id = '', )
                        ], ),
                game_center_leaderboard_sets = openapi_client.models.game_center_detail_relationships_game_center_leaderboard_sets.GameCenterDetail_relationships_gameCenterLeaderboardSets(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_detail_relationships_game_center_leaderboard_sets_data_inner.GameCenterDetail_relationships_gameCenterLeaderboardSets_data_inner(
                            type = 'gameCenterLeaderboardSets', 
                            id = '', )
                        ], ),
                game_center_achievements = openapi_client.models.game_center_activity_relationships_achievements.GameCenterActivity_relationships_achievements(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_achievement_localization_relationships_game_center_achievement_data.GameCenterAchievementLocalization_relationships_gameCenterAchievement_data(
                            type = 'gameCenterAchievements', 
                            id = '', )
                        ], ),
                game_center_activities = openapi_client.models.game_center_detail_relationships_game_center_activities.GameCenterDetail_relationships_gameCenterActivities(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_achievement_relationships_activity_data.GameCenterAchievement_relationships_activity_data(
                            type = 'gameCenterActivities', 
                            id = '', )
                        ], ),
                game_center_challenges = openapi_client.models.game_center_detail_relationships_game_center_challenges.GameCenterDetail_relationships_gameCenterChallenges(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_challenge_version_relationships_challenge_data.GameCenterChallengeVersion_relationships_challenge_data(
                            type = 'gameCenterChallenges', 
                            id = '', )
                        ], ),
                default_leaderboard = openapi_client.models.game_center_challenge_create_request_data_relationships_leaderboard.GameCenterChallengeCreateRequest_data_relationships_leaderboard(
                    data = openapi_client.models.game_center_activity_relationships_leaderboards_data_inner.GameCenterActivity_relationships_leaderboards_data_inner(
                        type = 'gameCenterLeaderboards', 
                        id = '', ), ),
                default_group_leaderboard = openapi_client.models.game_center_challenge_create_request_data_relationships_leaderboard.GameCenterChallengeCreateRequest_data_relationships_leaderboard(
                    data = openapi_client.models.game_center_activity_relationships_leaderboards_data_inner.GameCenterActivity_relationships_leaderboards_data_inner(
                        type = 'gameCenterLeaderboards', 
                        id = '', ), ),
                achievement_releases = openapi_client.models.game_center_achievement_relationships_releases.GameCenterAchievement_relationships_releases(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_achievement_relationships_releases_data_inner.GameCenterAchievement_relationships_releases_data_inner(
                            type = 'gameCenterAchievementReleases', 
                            id = '', )
                        ], ),
                activity_releases = openapi_client.models.game_center_detail_relationships_activity_releases.GameCenterDetail_relationships_activityReleases(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_activity_version_relationships_releases_data_inner.GameCenterActivityVersion_relationships_releases_data_inner(
                            type = 'gameCenterActivityVersionReleases', 
                            id = '', )
                        ], ),
                challenge_releases = openapi_client.models.game_center_detail_relationships_challenge_releases.GameCenterDetail_relationships_challengeReleases(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_challenge_version_relationships_releases_data_inner.GameCenterChallengeVersion_relationships_releases_data_inner(
                            type = 'gameCenterChallengeVersionReleases', 
                            id = '', )
                        ], ),
                leaderboard_releases = openapi_client.models.game_center_detail_relationships_leaderboard_releases.GameCenterDetail_relationships_leaderboardReleases(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_detail_relationships_leaderboard_releases_data_inner.GameCenterDetail_relationships_leaderboardReleases_data_inner(
                            type = 'gameCenterLeaderboardReleases', 
                            id = '', )
                        ], ),
                leaderboard_set_releases = openapi_client.models.game_center_detail_relationships_leaderboard_set_releases.GameCenterDetail_relationships_leaderboardSetReleases(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_detail_relationships_leaderboard_set_releases_data_inner.GameCenterDetail_relationships_leaderboardSetReleases_data_inner(
                            type = 'gameCenterLeaderboardSetReleases', 
                            id = '', )
                        ], ),
                challenges_minimum_platform_versions = openapi_client.models.app_relationships_app_store_versions.App_relationships_appStoreVersions(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.alternative_distribution_package_create_request_data_relationships_app_store_version_data.AlternativeDistributionPackageCreateRequest_data_relationships_appStoreVersion_data(
                            type = 'appStoreVersions', 
                            id = '', )
                        ], )
            )
        else:
            return GameCenterDetailRelationships(
        )
        """

    def testGameCenterDetailRelationships(self):
        """Test GameCenterDetailRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
