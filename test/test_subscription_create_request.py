# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_create_request import SubscriptionCreateRequest

class TestSubscriptionCreateRequest(unittest.TestCase):
    """SubscriptionCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionCreateRequest:
        """Test SubscriptionCreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionCreateRequest`
        """
        model = SubscriptionCreateRequest()
        if include_optional:
            return SubscriptionCreateRequest(
                data = openapi_client.models.subscription_create_request_data.SubscriptionCreateRequest_data(
                    type = 'subscriptions', 
                    attributes = openapi_client.models.subscription_create_request_data_attributes.SubscriptionCreateRequest_data_attributes(
                        name = '', 
                        product_id = '', 
                        family_sharable = True, 
                        subscription_period = 'ONE_WEEK', 
                        review_note = '', 
                        group_level = 56, ), 
                    relationships = openapi_client.models.subscription_create_request_data_relationships.SubscriptionCreateRequest_data_relationships(
                        group = openapi_client.models.subscription_group_localization_create_request_data_relationships_subscription_group.SubscriptionGroupLocalizationCreateRequest_data_relationships_subscriptionGroup(
                            data = openapi_client.models.app_relationships_subscription_groups_data_inner.App_relationships_subscriptionGroups_data_inner(
                                type = 'subscriptionGroups', 
                                id = '', ), ), ), )
            )
        else:
            return SubscriptionCreateRequest(
                data = openapi_client.models.subscription_create_request_data.SubscriptionCreateRequest_data(
                    type = 'subscriptions', 
                    attributes = openapi_client.models.subscription_create_request_data_attributes.SubscriptionCreateRequest_data_attributes(
                        name = '', 
                        product_id = '', 
                        family_sharable = True, 
                        subscription_period = 'ONE_WEEK', 
                        review_note = '', 
                        group_level = 56, ), 
                    relationships = openapi_client.models.subscription_create_request_data_relationships.SubscriptionCreateRequest_data_relationships(
                        group = openapi_client.models.subscription_group_localization_create_request_data_relationships_subscription_group.SubscriptionGroupLocalizationCreateRequest_data_relationships_subscriptionGroup(
                            data = openapi_client.models.app_relationships_subscription_groups_data_inner.App_relationships_subscriptionGroups_data_inner(
                                type = 'subscriptionGroups', 
                                id = '', ), ), ), ),
        )
        """

    def testSubscriptionCreateRequest(self):
        """Test SubscriptionCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
