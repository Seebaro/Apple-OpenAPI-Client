# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_leaderboard_set_release_create_request_data_relationships import GameCenterLeaderboardSetReleaseCreateRequestDataRelationships

class TestGameCenterLeaderboardSetReleaseCreateRequestDataRelationships(unittest.TestCase):
    """GameCenterLeaderboardSetReleaseCreateRequestDataRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterLeaderboardSetReleaseCreateRequestDataRelationships:
        """Test GameCenterLeaderboardSetReleaseCreateRequestDataRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterLeaderboardSetReleaseCreateRequestDataRelationships`
        """
        model = GameCenterLeaderboardSetReleaseCreateRequestDataRelationships()
        if include_optional:
            return GameCenterLeaderboardSetReleaseCreateRequestDataRelationships(
                game_center_detail = openapi_client.models.game_center_achievement_release_create_request_data_relationships_game_center_detail.GameCenterAchievementReleaseCreateRequest_data_relationships_gameCenterDetail(
                    data = openapi_client.models.app_relationships_game_center_detail_data.App_relationships_gameCenterDetail_data(
                        type = 'gameCenterDetails', 
                        id = '', ), ),
                game_center_leaderboard_set = openapi_client.models.game_center_leaderboard_set_localization_create_request_data_relationships_game_center_leaderboard_set.GameCenterLeaderboardSetLocalizationCreateRequest_data_relationships_gameCenterLeaderboardSet(
                    data = openapi_client.models.game_center_detail_relationships_game_center_leaderboard_sets_data_inner.GameCenterDetail_relationships_gameCenterLeaderboardSets_data_inner(
                        type = 'gameCenterLeaderboardSets', 
                        id = '', ), )
            )
        else:
            return GameCenterLeaderboardSetReleaseCreateRequestDataRelationships(
                game_center_detail = openapi_client.models.game_center_achievement_release_create_request_data_relationships_game_center_detail.GameCenterAchievementReleaseCreateRequest_data_relationships_gameCenterDetail(
                    data = openapi_client.models.app_relationships_game_center_detail_data.App_relationships_gameCenterDetail_data(
                        type = 'gameCenterDetails', 
                        id = '', ), ),
                game_center_leaderboard_set = openapi_client.models.game_center_leaderboard_set_localization_create_request_data_relationships_game_center_leaderboard_set.GameCenterLeaderboardSetLocalizationCreateRequest_data_relationships_gameCenterLeaderboardSet(
                    data = openapi_client.models.game_center_detail_relationships_game_center_leaderboard_sets_data_inner.GameCenterDetail_relationships_gameCenterLeaderboardSets_data_inner(
                        type = 'gameCenterLeaderboardSets', 
                        id = '', ), ),
        )
        """

    def testGameCenterLeaderboardSetReleaseCreateRequestDataRelationships(self):
        """Test GameCenterLeaderboardSetReleaseCreateRequestDataRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
