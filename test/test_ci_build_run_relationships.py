# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ci_build_run_relationships import CiBuildRunRelationships

class TestCiBuildRunRelationships(unittest.TestCase):
    """CiBuildRunRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CiBuildRunRelationships:
        """Test CiBuildRunRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CiBuildRunRelationships`
        """
        model = CiBuildRunRelationships()
        if include_optional:
            return CiBuildRunRelationships(
                builds = openapi_client.models.app_relationships_builds.App_relationships_builds(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_encryption_declaration_relationships_builds_data_inner.AppEncryptionDeclaration_relationships_builds_data_inner(
                            type = 'builds', 
                            id = '', )
                        ], ),
                workflow = openapi_client.models.ci_build_run_relationships_workflow.CiBuildRun_relationships_workflow(
                    data = openapi_client.models.ci_build_run_relationships_workflow_data.CiBuildRun_relationships_workflow_data(
                        type = 'ciWorkflows', 
                        id = '', ), ),
                product = openapi_client.models.ci_build_run_relationships_product.CiBuildRun_relationships_product(
                    data = openapi_client.models.app_relationships_ci_product_data.App_relationships_ciProduct_data(
                        type = 'ciProducts', 
                        id = '', ), ),
                source_branch_or_tag = openapi_client.models.ci_build_run_relationships_source_branch_or_tag.CiBuildRun_relationships_sourceBranchOrTag(
                    data = openapi_client.models.ci_build_run_relationships_source_branch_or_tag_data.CiBuildRun_relationships_sourceBranchOrTag_data(
                        type = 'scmGitReferences', 
                        id = '', ), ),
                destination_branch = openapi_client.models.ci_build_run_relationships_source_branch_or_tag.CiBuildRun_relationships_sourceBranchOrTag(
                    data = openapi_client.models.ci_build_run_relationships_source_branch_or_tag_data.CiBuildRun_relationships_sourceBranchOrTag_data(
                        type = 'scmGitReferences', 
                        id = '', ), ),
                actions = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                pull_request = openapi_client.models.ci_build_run_relationships_pull_request.CiBuildRun_relationships_pullRequest(
                    data = openapi_client.models.ci_build_run_relationships_pull_request_data.CiBuildRun_relationships_pullRequest_data(
                        type = 'scmPullRequests', 
                        id = '', ), )
            )
        else:
            return CiBuildRunRelationships(
        )
        """

    def testCiBuildRunRelationships(self):
        """Test CiBuildRunRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
