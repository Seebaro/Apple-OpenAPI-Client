# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_info_localizations_response import AppInfoLocalizationsResponse

class TestAppInfoLocalizationsResponse(unittest.TestCase):
    """AppInfoLocalizationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppInfoLocalizationsResponse:
        """Test AppInfoLocalizationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppInfoLocalizationsResponse`
        """
        model = AppInfoLocalizationsResponse()
        if include_optional:
            return AppInfoLocalizationsResponse(
                data = [
                    openapi_client.models.app_info_localization.AppInfoLocalization(
                        type = 'appInfoLocalizations', 
                        id = '', 
                        attributes = openapi_client.models.app_info_localization_attributes.AppInfoLocalization_attributes(
                            locale = '', 
                            name = '', 
                            subtitle = '', 
                            privacy_policy_url = '', 
                            privacy_choices_url = '', 
                            privacy_policy_text = '', ), 
                        relationships = openapi_client.models.app_info_localization_relationships.AppInfoLocalization_relationships(
                            app_info = openapi_client.models.app_info_localization_relationships_app_info.AppInfoLocalization_relationships_appInfo(
                                data = openapi_client.models.app_info_localization_relationships_app_info_data.AppInfoLocalization_relationships_appInfo_data(
                                    type = 'appInfos', 
                                    id = '', ), ), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                included = [
                    openapi_client.models.app_info.AppInfo(
                        type = 'appInfos', 
                        id = '', 
                        attributes = openapi_client.models.app_info_attributes.AppInfo_attributes(
                            app_store_state = 'ACCEPTED', 
                            state = 'ACCEPTED', 
                            app_store_age_rating = 'FOUR_PLUS', 
                            australia_age_rating = 'FIFTEEN', 
                            brazil_age_rating = 'L', 
                            brazil_age_rating_v2 = 'SELF_RATED_L', 
                            france_age_rating = 'EIGHTEEN', 
                            korea_age_rating = 'ALL', 
                            kids_age_band = 'FIVE_AND_UNDER', ), 
                        relationships = openapi_client.models.app_info_relationships.AppInfo_relationships(
                            app = openapi_client.models.alternative_distribution_key_create_request_data_relationships_app.AlternativeDistributionKeyCreateRequest_data_relationships_app(
                                data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                    type = 'apps', 
                                    id = '', ), ), 
                            age_rating_declaration = openapi_client.models.app_info_relationships_age_rating_declaration.AppInfo_relationships_ageRatingDeclaration(
                                links = openapi_client.models.relationship_links.RelationshipLinks(
                                    self = '', 
                                    related = '', ), ), 
                            app_info_localizations = openapi_client.models.app_info_relationships_app_info_localizations.AppInfo_relationships_appInfoLocalizations(
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        total = 56, 
                                        limit = 56, 
                                        next_cursor = '', ), ), ), 
                            primary_category = openapi_client.models.app_category_relationships_parent.AppCategory_relationships_parent(), 
                            primary_subcategory_one = openapi_client.models.app_category_relationships_parent.AppCategory_relationships_parent(), 
                            primary_subcategory_two = , 
                            secondary_category = , 
                            secondary_subcategory_one = , 
                            secondary_subcategory_two = , ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        total = 56, 
                        limit = 56, 
                        next_cursor = '', ), )
            )
        else:
            return AppInfoLocalizationsResponse(
                data = [
                    openapi_client.models.app_info_localization.AppInfoLocalization(
                        type = 'appInfoLocalizations', 
                        id = '', 
                        attributes = openapi_client.models.app_info_localization_attributes.AppInfoLocalization_attributes(
                            locale = '', 
                            name = '', 
                            subtitle = '', 
                            privacy_policy_url = '', 
                            privacy_choices_url = '', 
                            privacy_policy_text = '', ), 
                        relationships = openapi_client.models.app_info_localization_relationships.AppInfoLocalization_relationships(
                            app_info = openapi_client.models.app_info_localization_relationships_app_info.AppInfoLocalization_relationships_appInfo(
                                data = openapi_client.models.app_info_localization_relationships_app_info_data.AppInfoLocalization_relationships_appInfo_data(
                                    type = 'appInfos', 
                                    id = '', ), ), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
        )
        """

    def testAppInfoLocalizationsResponse(self):
        """Test AppInfoLocalizationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
