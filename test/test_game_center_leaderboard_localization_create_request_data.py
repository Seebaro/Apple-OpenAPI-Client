# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_leaderboard_localization_create_request_data import GameCenterLeaderboardLocalizationCreateRequestData

class TestGameCenterLeaderboardLocalizationCreateRequestData(unittest.TestCase):
    """GameCenterLeaderboardLocalizationCreateRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterLeaderboardLocalizationCreateRequestData:
        """Test GameCenterLeaderboardLocalizationCreateRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterLeaderboardLocalizationCreateRequestData`
        """
        model = GameCenterLeaderboardLocalizationCreateRequestData()
        if include_optional:
            return GameCenterLeaderboardLocalizationCreateRequestData(
                type = 'gameCenterLeaderboardLocalizations',
                attributes = openapi_client.models.game_center_leaderboard_localization_create_request_data_attributes.GameCenterLeaderboardLocalizationCreateRequest_data_attributes(
                    locale = '', 
                    name = '', 
                    formatter_override = 'INTEGER', 
                    formatter_suffix = '', 
                    formatter_suffix_singular = '', ),
                relationships = openapi_client.models.game_center_leaderboard_localization_create_request_data_relationships.GameCenterLeaderboardLocalizationCreateRequest_data_relationships(
                    game_center_leaderboard = openapi_client.models.game_center_leaderboard_localization_create_request_data_relationships_game_center_leaderboard.GameCenterLeaderboardLocalizationCreateRequest_data_relationships_gameCenterLeaderboard(
                        data = openapi_client.models.game_center_activity_relationships_leaderboards_data_inner.GameCenterActivity_relationships_leaderboards_data_inner(
                            type = 'gameCenterLeaderboards', 
                            id = '', ), ), )
            )
        else:
            return GameCenterLeaderboardLocalizationCreateRequestData(
                type = 'gameCenterLeaderboardLocalizations',
                attributes = openapi_client.models.game_center_leaderboard_localization_create_request_data_attributes.GameCenterLeaderboardLocalizationCreateRequest_data_attributes(
                    locale = '', 
                    name = '', 
                    formatter_override = 'INTEGER', 
                    formatter_suffix = '', 
                    formatter_suffix_singular = '', ),
                relationships = openapi_client.models.game_center_leaderboard_localization_create_request_data_relationships.GameCenterLeaderboardLocalizationCreateRequest_data_relationships(
                    game_center_leaderboard = openapi_client.models.game_center_leaderboard_localization_create_request_data_relationships_game_center_leaderboard.GameCenterLeaderboardLocalizationCreateRequest_data_relationships_gameCenterLeaderboard(
                        data = openapi_client.models.game_center_activity_relationships_leaderboards_data_inner.GameCenterActivity_relationships_leaderboards_data_inner(
                            type = 'gameCenterLeaderboards', 
                            id = '', ), ), ),
        )
        """

    def testGameCenterLeaderboardLocalizationCreateRequestData(self):
        """Test GameCenterLeaderboardLocalizationCreateRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
