# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.build_relationships import BuildRelationships

class TestBuildRelationships(unittest.TestCase):
    """BuildRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildRelationships:
        """Test BuildRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildRelationships`
        """
        model = BuildRelationships()
        if include_optional:
            return BuildRelationships(
                pre_release_version = openapi_client.models.build_relationships_pre_release_version.Build_relationships_preReleaseVersion(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_relationships_pre_release_versions_data_inner.App_relationships_preReleaseVersions_data_inner(
                        type = 'preReleaseVersions', 
                        id = '', ), ),
                individual_testers = openapi_client.models.beta_group_relationships_beta_testers.BetaGroup_relationships_betaTesters(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.beta_feedback_crash_submission_relationships_tester_data.BetaFeedbackCrashSubmission_relationships_tester_data(
                            type = 'betaTesters', 
                            id = '', )
                        ], ),
                beta_groups = openapi_client.models.app_relationships_beta_groups.App_relationships_betaGroups(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_beta_groups_data_inner.App_relationships_betaGroups_data_inner(
                            type = 'betaGroups', 
                            id = '', )
                        ], ),
                beta_build_localizations = openapi_client.models.build_relationships_beta_build_localizations.Build_relationships_betaBuildLocalizations(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.build_relationships_beta_build_localizations_data_inner.Build_relationships_betaBuildLocalizations_data_inner(
                            type = 'betaBuildLocalizations', 
                            id = '', )
                        ], ),
                app_encryption_declaration = openapi_client.models.build_relationships_app_encryption_declaration.Build_relationships_appEncryptionDeclaration(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_encryption_declaration_document_create_request_data_relationships_app_encryption_declaration_data.AppEncryptionDeclarationDocumentCreateRequest_data_relationships_appEncryptionDeclaration_data(
                        type = 'appEncryptionDeclarations', 
                        id = '', ), ),
                beta_app_review_submission = openapi_client.models.build_relationships_beta_app_review_submission.Build_relationships_betaAppReviewSubmission(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.build_relationships_beta_app_review_submission_data.Build_relationships_betaAppReviewSubmission_data(
                        type = 'betaAppReviewSubmissions', 
                        id = '', ), ),
                app = openapi_client.models.beta_app_localization_relationships_app.BetaAppLocalization_relationships_app(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                        type = 'apps', 
                        id = '', ), ),
                build_beta_detail = openapi_client.models.build_relationships_build_beta_detail.Build_relationships_buildBetaDetail(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.build_relationships_build_beta_detail_data.Build_relationships_buildBetaDetail_data(
                        type = 'buildBetaDetails', 
                        id = '', ), ),
                app_store_version = openapi_client.models.app_clip_default_experience_relationships_release_with_app_store_version.AppClipDefaultExperience_relationships_releaseWithAppStoreVersion(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.alternative_distribution_package_create_request_data_relationships_app_store_version_data.AlternativeDistributionPackageCreateRequest_data_relationships_appStoreVersion_data(
                        type = 'appStoreVersions', 
                        id = '', ), ),
                icons = openapi_client.models.build_relationships_icons.Build_relationships_icons(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.build_relationships_icons_data_inner.Build_relationships_icons_data_inner(
                            type = 'buildIcons', 
                            id = '', )
                        ], ),
                build_bundles = openapi_client.models.build_relationships_build_bundles.Build_relationships_buildBundles(
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.beta_app_clip_invocation_create_request_data_relationships_build_bundle_data.BetaAppClipInvocationCreateRequest_data_relationships_buildBundle_data(
                            type = 'buildBundles', 
                            id = '', )
                        ], ),
                perf_power_metrics = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                diagnostic_signatures = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), )
            )
        else:
            return BuildRelationships(
        )
        """

    def testBuildRelationships(self):
        """Test BuildRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
