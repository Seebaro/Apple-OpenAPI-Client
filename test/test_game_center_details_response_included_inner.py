# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_details_response_included_inner import GameCenterDetailsResponseIncludedInner

class TestGameCenterDetailsResponseIncludedInner(unittest.TestCase):
    """GameCenterDetailsResponseIncludedInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterDetailsResponseIncludedInner:
        """Test GameCenterDetailsResponseIncludedInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterDetailsResponseIncludedInner`
        """
        model = GameCenterDetailsResponseIncludedInner()
        if include_optional:
            return GameCenterDetailsResponseIncludedInner(
                type = 'apps',
                id = '',
                attributes = openapi_client.models.app_store_version_attributes.AppStoreVersion_attributes(
                    platform = 'IOS', 
                    version_string = '', 
                    app_store_state = 'ACCEPTED', 
                    app_version_state = 'ACCEPTED', 
                    copyright = '', 
                    review_type = 'APP_STORE', 
                    release_type = 'MANUAL', 
                    earliest_release_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    uses_idfa = True, 
                    downloadable = True, 
                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                relationships = openapi_client.models.app_store_version_relationships.AppStoreVersion_relationships(
                    app = openapi_client.models.alternative_distribution_key_create_request_data_relationships_app.AlternativeDistributionKeyCreateRequest_data_relationships_app(
                        data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                            type = 'apps', 
                            id = '', ), ), 
                    age_rating_declaration = openapi_client.models.app_store_version_relationships_age_rating_declaration.AppStoreVersion_relationships_ageRatingDeclaration(
                        links = openapi_client.models.relationship_links.RelationshipLinks(
                            self = '', 
                            related = '', ), ), 
                    app_store_version_localizations = openapi_client.models.app_store_version_relationships_app_store_version_localizations.AppStoreVersion_relationships_appStoreVersionLocalizations(
                        meta = openapi_client.models.paging_information.PagingInformation(
                            paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                total = 56, 
                                limit = 56, 
                                next_cursor = '', ), ), ), 
                    build = openapi_client.models.app_store_version_relationships_build.AppStoreVersion_relationships_build(), 
                    app_store_version_phased_release = openapi_client.models.app_store_version_relationships_app_store_version_phased_release.AppStoreVersion_relationships_appStoreVersionPhasedRelease(), 
                    game_center_app_version = openapi_client.models.app_store_version_relationships_game_center_app_version.AppStoreVersion_relationships_gameCenterAppVersion(), 
                    routing_app_coverage = openapi_client.models.app_store_version_relationships_routing_app_coverage.AppStoreVersion_relationships_routingAppCoverage(), 
                    app_store_review_detail = openapi_client.models.app_store_version_relationships_app_store_review_detail.AppStoreVersion_relationships_appStoreReviewDetail(), 
                    app_store_version_submission = openapi_client.models.app_store_version_relationships_app_store_version_submission.AppStoreVersion_relationships_appStoreVersionSubmission(), 
                    app_clip_default_experience = openapi_client.models.app_store_version_relationships_app_clip_default_experience.AppStoreVersion_relationships_appClipDefaultExperience(), 
                    app_store_version_experiments = openapi_client.models.app_store_version_relationships_app_store_version_experiments.AppStoreVersion_relationships_appStoreVersionExperiments(), 
                    app_store_version_experiments_v2 = openapi_client.models.app_store_version_relationships_app_store_version_experiments.AppStoreVersion_relationships_appStoreVersionExperiments(), 
                    customer_reviews = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(), 
                    alternative_distribution_package = openapi_client.models.app_store_version_relationships_alternative_distribution_package.AppStoreVersion_relationships_alternativeDistributionPackage(), ),
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', )
            )
        else:
            return GameCenterDetailsResponseIncludedInner(
                type = 'apps',
                id = '',
        )
        """

    def testGameCenterDetailsResponseIncludedInner(self):
        """Test GameCenterDetailsResponseIncludedInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
