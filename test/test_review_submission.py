# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.review_submission import ReviewSubmission

class TestReviewSubmission(unittest.TestCase):
    """ReviewSubmission unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReviewSubmission:
        """Test ReviewSubmission
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReviewSubmission`
        """
        model = ReviewSubmission()
        if include_optional:
            return ReviewSubmission(
                type = 'reviewSubmissions',
                id = '',
                attributes = openapi_client.models.review_submission_attributes.ReviewSubmission_attributes(
                    platform = 'IOS', 
                    submitted_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    state = 'READY_FOR_REVIEW', ),
                relationships = openapi_client.models.review_submission_relationships.ReviewSubmission_relationships(
                    app = openapi_client.models.alternative_distribution_key_create_request_data_relationships_app.AlternativeDistributionKeyCreateRequest_data_relationships_app(
                        data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                            type = 'apps', 
                            id = '', ), ), 
                    items = openapi_client.models.review_submission_relationships_items.ReviewSubmission_relationships_items(
                        links = openapi_client.models.relationship_links.RelationshipLinks(
                            self = '', 
                            related = '', ), 
                        meta = openapi_client.models.paging_information.PagingInformation(
                            paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                total = 56, 
                                limit = 56, 
                                next_cursor = '', ), ), ), 
                    app_store_version_for_review = openapi_client.models.app_clip_default_experience_create_request_data_relationships_release_with_app_store_version.AppClipDefaultExperienceCreateRequest_data_relationships_releaseWithAppStoreVersion(), 
                    submitted_by_actor = openapi_client.models.nomination_relationships_created_by_actor.Nomination_relationships_createdByActor(), 
                    last_updated_by_actor = openapi_client.models.nomination_relationships_created_by_actor.Nomination_relationships_createdByActor(), ),
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', )
            )
        else:
            return ReviewSubmission(
                type = 'reviewSubmissions',
                id = '',
        )
        """

    def testReviewSubmission(self):
        """Test ReviewSubmission"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
