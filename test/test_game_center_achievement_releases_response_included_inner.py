# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_achievement_releases_response_included_inner import GameCenterAchievementReleasesResponseIncludedInner

class TestGameCenterAchievementReleasesResponseIncludedInner(unittest.TestCase):
    """GameCenterAchievementReleasesResponseIncludedInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterAchievementReleasesResponseIncludedInner:
        """Test GameCenterAchievementReleasesResponseIncludedInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterAchievementReleasesResponseIncludedInner`
        """
        model = GameCenterAchievementReleasesResponseIncludedInner()
        if include_optional:
            return GameCenterAchievementReleasesResponseIncludedInner(
                type = 'gameCenterDetails',
                id = '',
                attributes = openapi_client.models.game_center_achievement_attributes.GameCenterAchievement_attributes(
                    reference_name = '', 
                    vendor_identifier = '', 
                    points = 56, 
                    show_before_earned = True, 
                    repeatable = True, 
                    archived = True, 
                    activity_properties = {
                        'key' : ''
                        }, ),
                relationships = openapi_client.models.game_center_achievement_relationships.GameCenterAchievement_relationships(
                    game_center_detail = openapi_client.models.game_center_achievement_release_relationships_game_center_detail.GameCenterAchievementRelease_relationships_gameCenterDetail(
                        data = openapi_client.models.app_relationships_game_center_detail_data.App_relationships_gameCenterDetail_data(
                            type = 'gameCenterDetails', 
                            id = '', ), ), 
                    game_center_group = openapi_client.models.game_center_achievement_relationships_game_center_group.GameCenterAchievement_relationships_gameCenterGroup(), 
                    group_achievement = openapi_client.models.game_center_achievement_relationships_group_achievement.GameCenterAchievement_relationships_groupAchievement(
                        links = openapi_client.models.relationship_links.RelationshipLinks(
                            self = '', 
                            related = '', ), ), 
                    localizations = openapi_client.models.game_center_achievement_relationships_localizations.GameCenterAchievement_relationships_localizations(
                        meta = openapi_client.models.paging_information.PagingInformation(
                            paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                total = 56, 
                                limit = 56, 
                                next_cursor = '', ), ), ), 
                    releases = openapi_client.models.game_center_achievement_relationships_releases.GameCenterAchievement_relationships_releases(), 
                    activity = openapi_client.models.game_center_achievement_relationships_activity.GameCenterAchievement_relationships_activity(), ),
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', )
            )
        else:
            return GameCenterAchievementReleasesResponseIncludedInner(
                type = 'gameCenterDetails',
                id = '',
        )
        """

    def testGameCenterAchievementReleasesResponseIncludedInner(self):
        """Test GameCenterAchievementReleasesResponseIncludedInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
