# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_offer_code_one_time_use_code_create_request_data import SubscriptionOfferCodeOneTimeUseCodeCreateRequestData

class TestSubscriptionOfferCodeOneTimeUseCodeCreateRequestData(unittest.TestCase):
    """SubscriptionOfferCodeOneTimeUseCodeCreateRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionOfferCodeOneTimeUseCodeCreateRequestData:
        """Test SubscriptionOfferCodeOneTimeUseCodeCreateRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionOfferCodeOneTimeUseCodeCreateRequestData`
        """
        model = SubscriptionOfferCodeOneTimeUseCodeCreateRequestData()
        if include_optional:
            return SubscriptionOfferCodeOneTimeUseCodeCreateRequestData(
                type = 'subscriptionOfferCodeOneTimeUseCodes',
                attributes = openapi_client.models.subscription_offer_code_one_time_use_code_create_request_data_attributes.SubscriptionOfferCodeOneTimeUseCodeCreateRequest_data_attributes(
                    number_of_codes = 56, 
                    expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                relationships = openapi_client.models.subscription_offer_code_custom_code_create_request_data_relationships.SubscriptionOfferCodeCustomCodeCreateRequest_data_relationships(
                    offer_code = openapi_client.models.subscription_offer_code_custom_code_create_request_data_relationships_offer_code.SubscriptionOfferCodeCustomCodeCreateRequest_data_relationships_offerCode(
                        data = openapi_client.models.subscription_offer_code_custom_code_relationships_offer_code_data.SubscriptionOfferCodeCustomCode_relationships_offerCode_data(
                            type = 'subscriptionOfferCodes', 
                            id = '', ), ), )
            )
        else:
            return SubscriptionOfferCodeOneTimeUseCodeCreateRequestData(
                type = 'subscriptionOfferCodeOneTimeUseCodes',
                attributes = openapi_client.models.subscription_offer_code_one_time_use_code_create_request_data_attributes.SubscriptionOfferCodeOneTimeUseCodeCreateRequest_data_attributes(
                    number_of_codes = 56, 
                    expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                relationships = openapi_client.models.subscription_offer_code_custom_code_create_request_data_relationships.SubscriptionOfferCodeCustomCodeCreateRequest_data_relationships(
                    offer_code = openapi_client.models.subscription_offer_code_custom_code_create_request_data_relationships_offer_code.SubscriptionOfferCodeCustomCodeCreateRequest_data_relationships_offerCode(
                        data = openapi_client.models.subscription_offer_code_custom_code_relationships_offer_code_data.SubscriptionOfferCodeCustomCode_relationships_offerCode_data(
                            type = 'subscriptionOfferCodes', 
                            id = '', ), ), ),
        )
        """

    def testSubscriptionOfferCodeOneTimeUseCodeCreateRequestData(self):
        """Test SubscriptionOfferCodeOneTimeUseCodeCreateRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
