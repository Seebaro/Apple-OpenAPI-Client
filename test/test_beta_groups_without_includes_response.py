# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.beta_groups_without_includes_response import BetaGroupsWithoutIncludesResponse

class TestBetaGroupsWithoutIncludesResponse(unittest.TestCase):
    """BetaGroupsWithoutIncludesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BetaGroupsWithoutIncludesResponse:
        """Test BetaGroupsWithoutIncludesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BetaGroupsWithoutIncludesResponse`
        """
        model = BetaGroupsWithoutIncludesResponse()
        if include_optional:
            return BetaGroupsWithoutIncludesResponse(
                data = [
                    openapi_client.models.beta_group.BetaGroup(
                        type = 'betaGroups', 
                        id = '', 
                        attributes = openapi_client.models.beta_group_attributes.BetaGroup_attributes(
                            name = '', 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            is_internal_group = True, 
                            has_access_to_all_builds = True, 
                            public_link_enabled = True, 
                            public_link_id = '', 
                            public_link_limit_enabled = True, 
                            public_link_limit = 56, 
                            public_link = '', 
                            feedback_enabled = True, 
                            ios_builds_available_for_apple_silicon_mac = True, 
                            ios_builds_available_for_apple_vision = True, ), 
                        relationships = openapi_client.models.beta_group_relationships.BetaGroup_relationships(
                            app = openapi_client.models.beta_app_localization_relationships_app.BetaAppLocalization_relationships_app(
                                links = openapi_client.models.relationship_links.RelationshipLinks(
                                    self = '', 
                                    related = '', ), 
                                data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                    type = 'apps', 
                                    id = '', ), ), 
                            builds = openapi_client.models.app_relationships_builds.App_relationships_builds(
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        total = 56, 
                                        limit = 56, 
                                        next_cursor = '', ), ), ), 
                            beta_testers = openapi_client.models.beta_group_relationships_beta_testers.BetaGroup_relationships_betaTesters(), 
                            beta_recruitment_criteria = openapi_client.models.beta_group_relationships_beta_recruitment_criteria.BetaGroup_relationships_betaRecruitmentCriteria(), 
                            beta_recruitment_criterion_compatible_build_check = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        total = 56, 
                        limit = 56, 
                        next_cursor = '', ), )
            )
        else:
            return BetaGroupsWithoutIncludesResponse(
                data = [
                    openapi_client.models.beta_group.BetaGroup(
                        type = 'betaGroups', 
                        id = '', 
                        attributes = openapi_client.models.beta_group_attributes.BetaGroup_attributes(
                            name = '', 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            is_internal_group = True, 
                            has_access_to_all_builds = True, 
                            public_link_enabled = True, 
                            public_link_id = '', 
                            public_link_limit_enabled = True, 
                            public_link_limit = 56, 
                            public_link = '', 
                            feedback_enabled = True, 
                            ios_builds_available_for_apple_silicon_mac = True, 
                            ios_builds_available_for_apple_vision = True, ), 
                        relationships = openapi_client.models.beta_group_relationships.BetaGroup_relationships(
                            app = openapi_client.models.beta_app_localization_relationships_app.BetaAppLocalization_relationships_app(
                                links = openapi_client.models.relationship_links.RelationshipLinks(
                                    self = '', 
                                    related = '', ), 
                                data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                    type = 'apps', 
                                    id = '', ), ), 
                            builds = openapi_client.models.app_relationships_builds.App_relationships_builds(
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        total = 56, 
                                        limit = 56, 
                                        next_cursor = '', ), ), ), 
                            beta_testers = openapi_client.models.beta_group_relationships_beta_testers.BetaGroup_relationships_betaTesters(), 
                            beta_recruitment_criteria = openapi_client.models.beta_group_relationships_beta_recruitment_criteria.BetaGroup_relationships_betaRecruitmentCriteria(), 
                            beta_recruitment_criterion_compatible_build_check = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
        )
        """

    def testBetaGroupsWithoutIncludesResponse(self):
        """Test BetaGroupsWithoutIncludesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
