# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ci_build_run_create_request import CiBuildRunCreateRequest

class TestCiBuildRunCreateRequest(unittest.TestCase):
    """CiBuildRunCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CiBuildRunCreateRequest:
        """Test CiBuildRunCreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CiBuildRunCreateRequest`
        """
        model = CiBuildRunCreateRequest()
        if include_optional:
            return CiBuildRunCreateRequest(
                data = openapi_client.models.ci_build_run_create_request_data.CiBuildRunCreateRequest_data(
                    type = 'ciBuildRuns', 
                    attributes = openapi_client.models.ci_build_run_create_request_data_attributes.CiBuildRunCreateRequest_data_attributes(
                        clean = True, ), 
                    relationships = openapi_client.models.ci_build_run_create_request_data_relationships.CiBuildRunCreateRequest_data_relationships(
                        build_run = openapi_client.models.ci_build_run_create_request_data_relationships_build_run.CiBuildRunCreateRequest_data_relationships_buildRun(
                            data = openapi_client.models.ci_build_action_relationships_build_run_data.CiBuildAction_relationships_buildRun_data(
                                type = 'ciBuildRuns', 
                                id = '', ), ), 
                        workflow = openapi_client.models.ci_build_run_relationships_workflow.CiBuildRun_relationships_workflow(), 
                        source_branch_or_tag = openapi_client.models.ci_build_run_relationships_source_branch_or_tag.CiBuildRun_relationships_sourceBranchOrTag(), 
                        pull_request = openapi_client.models.ci_build_run_relationships_pull_request.CiBuildRun_relationships_pullRequest(), ), )
            )
        else:
            return CiBuildRunCreateRequest(
                data = openapi_client.models.ci_build_run_create_request_data.CiBuildRunCreateRequest_data(
                    type = 'ciBuildRuns', 
                    attributes = openapi_client.models.ci_build_run_create_request_data_attributes.CiBuildRunCreateRequest_data_attributes(
                        clean = True, ), 
                    relationships = openapi_client.models.ci_build_run_create_request_data_relationships.CiBuildRunCreateRequest_data_relationships(
                        build_run = openapi_client.models.ci_build_run_create_request_data_relationships_build_run.CiBuildRunCreateRequest_data_relationships_buildRun(
                            data = openapi_client.models.ci_build_action_relationships_build_run_data.CiBuildAction_relationships_buildRun_data(
                                type = 'ciBuildRuns', 
                                id = '', ), ), 
                        workflow = openapi_client.models.ci_build_run_relationships_workflow.CiBuildRun_relationships_workflow(), 
                        source_branch_or_tag = openapi_client.models.ci_build_run_relationships_source_branch_or_tag.CiBuildRun_relationships_sourceBranchOrTag(), 
                        pull_request = openapi_client.models.ci_build_run_relationships_pull_request.CiBuildRun_relationships_pullRequest(), ), ),
        )
        """

    def testCiBuildRunCreateRequest(self):
        """Test CiBuildRunCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
