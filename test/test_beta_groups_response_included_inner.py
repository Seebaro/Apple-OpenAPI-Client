# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.beta_groups_response_included_inner import BetaGroupsResponseIncludedInner

class TestBetaGroupsResponseIncludedInner(unittest.TestCase):
    """BetaGroupsResponseIncludedInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BetaGroupsResponseIncludedInner:
        """Test BetaGroupsResponseIncludedInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BetaGroupsResponseIncludedInner`
        """
        model = BetaGroupsResponseIncludedInner()
        if include_optional:
            return BetaGroupsResponseIncludedInner(
                type = 'apps',
                id = '',
                attributes = openapi_client.models.beta_recruitment_criterion_attributes.BetaRecruitmentCriterion_attributes(
                    last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    device_family_os_version_filters = [
                        openapi_client.models.device_family_os_version_filter.DeviceFamilyOsVersionFilter(
                            device_family = 'IPHONE', 
                            minimum_os_inclusive = '', 
                            maximum_os_inclusive = '', )
                        ], ),
                relationships = openapi_client.models.beta_tester_relationships.BetaTester_relationships(
                    apps = openapi_client.models.beta_tester_relationships_apps.BetaTester_relationships_apps(
                        links = openapi_client.models.relationship_links.RelationshipLinks(
                            self = '', 
                            related = '', ), 
                        meta = openapi_client.models.paging_information.PagingInformation(
                            paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                total = 56, 
                                limit = 56, 
                                next_cursor = '', ), ), 
                        data = [
                            openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', )
                            ], ), 
                    beta_groups = openapi_client.models.app_relationships_beta_groups.App_relationships_betaGroups(), 
                    builds = openapi_client.models.app_relationships_builds.App_relationships_builds(), ),
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', )
            )
        else:
            return BetaGroupsResponseIncludedInner(
                type = 'apps',
                id = '',
        )
        """

    def testBetaGroupsResponseIncludedInner(self):
        """Test BetaGroupsResponseIncludedInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
