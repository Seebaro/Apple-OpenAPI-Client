# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alternative_distribution_domains_response import AlternativeDistributionDomainsResponse

class TestAlternativeDistributionDomainsResponse(unittest.TestCase):
    """AlternativeDistributionDomainsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlternativeDistributionDomainsResponse:
        """Test AlternativeDistributionDomainsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlternativeDistributionDomainsResponse`
        """
        model = AlternativeDistributionDomainsResponse()
        if include_optional:
            return AlternativeDistributionDomainsResponse(
                data = [
                    openapi_client.models.alternative_distribution_domain.AlternativeDistributionDomain(
                        type = 'alternativeDistributionDomains', 
                        id = '', 
                        attributes = openapi_client.models.alternative_distribution_domain_attributes.AlternativeDistributionDomain_attributes(
                            domain = '', 
                            reference_name = '', 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        total = 56, 
                        limit = 56, 
                        next_cursor = '', ), )
            )
        else:
            return AlternativeDistributionDomainsResponse(
                data = [
                    openapi_client.models.alternative_distribution_domain.AlternativeDistributionDomain(
                        type = 'alternativeDistributionDomains', 
                        id = '', 
                        attributes = openapi_client.models.alternative_distribution_domain_attributes.AlternativeDistributionDomain_attributes(
                            domain = '', 
                            reference_name = '', 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
        )
        """

    def testAlternativeDistributionDomainsResponse(self):
        """Test AlternativeDistributionDomainsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
