# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_matchmaking_rule_set_test_response import GameCenterMatchmakingRuleSetTestResponse

class TestGameCenterMatchmakingRuleSetTestResponse(unittest.TestCase):
    """GameCenterMatchmakingRuleSetTestResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterMatchmakingRuleSetTestResponse:
        """Test GameCenterMatchmakingRuleSetTestResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterMatchmakingRuleSetTestResponse`
        """
        model = GameCenterMatchmakingRuleSetTestResponse()
        if include_optional:
            return GameCenterMatchmakingRuleSetTestResponse(
                data = openapi_client.models.game_center_matchmaking_rule_set_test.GameCenterMatchmakingRuleSetTest(
                    type = 'gameCenterMatchmakingRuleSetTests', 
                    id = '', 
                    attributes = openapi_client.models.game_center_matchmaking_rule_set_test_attributes.GameCenterMatchmakingRuleSetTest_attributes(
                        matchmaking_results = [
                            [
                                openapi_client.models.game_center_matchmaking_rule_set_test_attributes_matchmaking_results_inner_inner.GameCenterMatchmakingRuleSetTest_attributes_matchmakingResults_inner_inner(
                                    request_name = '', 
                                    team_assignments = [
                                        openapi_client.models.game_center_matchmaking_team_assignment.GameCenterMatchmakingTeamAssignment(
                                            player_id = '', 
                                            team = '', )
                                        ], )
                                ]
                            ], ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', )
            )
        else:
            return GameCenterMatchmakingRuleSetTestResponse(
                data = openapi_client.models.game_center_matchmaking_rule_set_test.GameCenterMatchmakingRuleSetTest(
                    type = 'gameCenterMatchmakingRuleSetTests', 
                    id = '', 
                    attributes = openapi_client.models.game_center_matchmaking_rule_set_test_attributes.GameCenterMatchmakingRuleSetTest_attributes(
                        matchmaking_results = [
                            [
                                openapi_client.models.game_center_matchmaking_rule_set_test_attributes_matchmaking_results_inner_inner.GameCenterMatchmakingRuleSetTest_attributes_matchmakingResults_inner_inner(
                                    request_name = '', 
                                    team_assignments = [
                                        openapi_client.models.game_center_matchmaking_team_assignment.GameCenterMatchmakingTeamAssignment(
                                            player_id = '', 
                                            team = '', )
                                        ], )
                                ]
                            ], ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', ),
        )
        """

    def testGameCenterMatchmakingRuleSetTestResponse(self):
        """Test GameCenterMatchmakingRuleSetTestResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
