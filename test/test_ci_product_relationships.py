# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ci_product_relationships import CiProductRelationships

class TestCiProductRelationships(unittest.TestCase):
    """CiProductRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CiProductRelationships:
        """Test CiProductRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CiProductRelationships`
        """
        model = CiProductRelationships()
        if include_optional:
            return CiProductRelationships(
                app = openapi_client.models.beta_app_localization_relationships_app.BetaAppLocalization_relationships_app(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                        type = 'apps', 
                        id = '', ), ),
                bundle_id = openapi_client.models.ci_product_relationships_bundle_id.CiProduct_relationships_bundleId(
                    data = openapi_client.models.bundle_id_capability_create_request_data_relationships_bundle_id_data.BundleIdCapabilityCreateRequest_data_relationships_bundleId_data(
                        type = 'bundleIds', 
                        id = '', ), ),
                workflows = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                primary_repositories = openapi_client.models.ci_product_relationships_primary_repositories.CiProduct_relationships_primaryRepositories(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.ci_product_relationships_primary_repositories_data_inner.CiProduct_relationships_primaryRepositories_data_inner(
                            type = 'scmRepositories', 
                            id = '', )
                        ], ),
                additional_repositories = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                build_runs = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), )
            )
        else:
            return CiProductRelationships(
        )
        """

    def testCiProductRelationships(self):
        """Test CiProductRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
