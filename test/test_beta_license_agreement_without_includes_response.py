# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.beta_license_agreement_without_includes_response import BetaLicenseAgreementWithoutIncludesResponse

class TestBetaLicenseAgreementWithoutIncludesResponse(unittest.TestCase):
    """BetaLicenseAgreementWithoutIncludesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BetaLicenseAgreementWithoutIncludesResponse:
        """Test BetaLicenseAgreementWithoutIncludesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BetaLicenseAgreementWithoutIncludesResponse`
        """
        model = BetaLicenseAgreementWithoutIncludesResponse()
        if include_optional:
            return BetaLicenseAgreementWithoutIncludesResponse(
                data = openapi_client.models.beta_license_agreement.BetaLicenseAgreement(
                    type = 'betaLicenseAgreements', 
                    id = '', 
                    attributes = openapi_client.models.beta_license_agreement_attributes.BetaLicenseAgreement_attributes(
                        agreement_text = '', ), 
                    relationships = openapi_client.models.beta_app_localization_relationships.BetaAppLocalization_relationships(
                        app = openapi_client.models.beta_app_localization_relationships_app.BetaAppLocalization_relationships_app(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), 
                            data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', ), ), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', )
            )
        else:
            return BetaLicenseAgreementWithoutIncludesResponse(
                data = openapi_client.models.beta_license_agreement.BetaLicenseAgreement(
                    type = 'betaLicenseAgreements', 
                    id = '', 
                    attributes = openapi_client.models.beta_license_agreement_attributes.BetaLicenseAgreement_attributes(
                        agreement_text = '', ), 
                    relationships = openapi_client.models.beta_app_localization_relationships.BetaAppLocalization_relationships(
                        app = openapi_client.models.beta_app_localization_relationships_app.BetaAppLocalization_relationships_app(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), 
                            data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', ), ), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', ),
        )
        """

    def testBetaLicenseAgreementWithoutIncludesResponse(self):
        """Test BetaLicenseAgreementWithoutIncludesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
