# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_relationships import AppRelationships

class TestAppRelationships(unittest.TestCase):
    """AppRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppRelationships:
        """Test AppRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppRelationships`
        """
        model = AppRelationships()
        if include_optional:
            return AppRelationships(
                accessibility_declarations = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                app_encryption_declarations = openapi_client.models.app_relationships_app_encryption_declarations.App_relationships_appEncryptionDeclarations(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_encryption_declaration_document_create_request_data_relationships_app_encryption_declaration_data.AppEncryptionDeclarationDocumentCreateRequest_data_relationships_appEncryptionDeclaration_data(
                            type = 'appEncryptionDeclarations', 
                            id = '', )
                        ], ),
                ci_product = openapi_client.models.app_relationships_ci_product.App_relationships_ciProduct(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_relationships_ci_product_data.App_relationships_ciProduct_data(
                        type = 'ciProducts', 
                        id = '', ), ),
                beta_testers = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                beta_groups = openapi_client.models.app_relationships_beta_groups.App_relationships_betaGroups(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_beta_groups_data_inner.App_relationships_betaGroups_data_inner(
                            type = 'betaGroups', 
                            id = '', )
                        ], ),
                app_store_versions = openapi_client.models.app_relationships_app_store_versions.App_relationships_appStoreVersions(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.alternative_distribution_package_create_request_data_relationships_app_store_version_data.AlternativeDistributionPackageCreateRequest_data_relationships_appStoreVersion_data(
                            type = 'appStoreVersions', 
                            id = '', )
                        ], ),
                pre_release_versions = openapi_client.models.app_relationships_pre_release_versions.App_relationships_preReleaseVersions(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_pre_release_versions_data_inner.App_relationships_preReleaseVersions_data_inner(
                            type = 'preReleaseVersions', 
                            id = '', )
                        ], ),
                beta_app_localizations = openapi_client.models.app_relationships_beta_app_localizations.App_relationships_betaAppLocalizations(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_beta_app_localizations_data_inner.App_relationships_betaAppLocalizations_data_inner(
                            type = 'betaAppLocalizations', 
                            id = '', )
                        ], ),
                builds = openapi_client.models.app_relationships_builds.App_relationships_builds(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_encryption_declaration_relationships_builds_data_inner.AppEncryptionDeclaration_relationships_builds_data_inner(
                            type = 'builds', 
                            id = '', )
                        ], ),
                beta_license_agreement = openapi_client.models.app_relationships_beta_license_agreement.App_relationships_betaLicenseAgreement(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_relationships_beta_license_agreement_data.App_relationships_betaLicenseAgreement_data(
                        type = 'betaLicenseAgreements', 
                        id = '', ), ),
                beta_app_review_detail = openapi_client.models.app_relationships_beta_app_review_detail.App_relationships_betaAppReviewDetail(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_relationships_beta_app_review_detail_data.App_relationships_betaAppReviewDetail_data(
                        type = 'betaAppReviewDetails', 
                        id = '', ), ),
                app_infos = openapi_client.models.app_relationships_app_infos.App_relationships_appInfos(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_info_localization_relationships_app_info_data.AppInfoLocalization_relationships_appInfo_data(
                            type = 'appInfos', 
                            id = '', )
                        ], ),
                app_clips = openapi_client.models.app_relationships_app_clips.App_relationships_appClips(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_clip_advanced_experience_relationships_app_clip_data.AppClipAdvancedExperience_relationships_appClip_data(
                            type = 'appClips', 
                            id = '', )
                        ], ),
                app_price_points = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                end_user_license_agreement = openapi_client.models.app_relationships_end_user_license_agreement.App_relationships_endUserLicenseAgreement(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_relationships_end_user_license_agreement_data.App_relationships_endUserLicenseAgreement_data(
                        type = 'endUserLicenseAgreements', 
                        id = '', ), ),
                app_price_schedule = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                app_availability_v2 = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                in_app_purchases = openapi_client.models.app_relationships_in_app_purchases.App_relationships_inAppPurchases(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_in_app_purchases_data_inner.App_relationships_inAppPurchases_data_inner(
                            type = 'inAppPurchases', 
                            id = '', )
                        ], ),
                subscription_groups = openapi_client.models.app_relationships_subscription_groups.App_relationships_subscriptionGroups(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_subscription_groups_data_inner.App_relationships_subscriptionGroups_data_inner(
                            type = 'subscriptionGroups', 
                            id = '', )
                        ], ),
                game_center_enabled_versions = openapi_client.models.app_relationships_game_center_enabled_versions.App_relationships_gameCenterEnabledVersions(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_game_center_enabled_versions_data_inner.App_relationships_gameCenterEnabledVersions_data_inner(
                            type = 'gameCenterEnabledVersions', 
                            id = '', )
                        ], ),
                perf_power_metrics = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                app_custom_product_pages = openapi_client.models.app_relationships_app_custom_product_pages.App_relationships_appCustomProductPages(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_custom_product_page_version_relationships_app_custom_product_page_data.AppCustomProductPageVersion_relationships_appCustomProductPage_data(
                            type = 'appCustomProductPages', 
                            id = '', )
                        ], ),
                in_app_purchases_v2 = openapi_client.models.app_relationships_in_app_purchases_v2.App_relationships_inAppPurchasesV2(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_in_app_purchases_data_inner.App_relationships_inAppPurchases_data_inner(
                            type = 'inAppPurchases', 
                            id = '', )
                        ], ),
                promoted_purchases = openapi_client.models.app_relationships_promoted_purchases.App_relationships_promotedPurchases(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_promoted_purchases_data_inner.App_relationships_promotedPurchases_data_inner(
                            type = 'promotedPurchases', 
                            id = '', )
                        ], ),
                app_events = openapi_client.models.app_relationships_app_events.App_relationships_appEvents(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_event_localization_relationships_app_event_data.AppEventLocalization_relationships_appEvent_data(
                            type = 'appEvents', 
                            id = '', )
                        ], ),
                review_submissions = openapi_client.models.app_relationships_review_submissions.App_relationships_reviewSubmissions(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_relationships_review_submissions_data_inner.App_relationships_reviewSubmissions_data_inner(
                            type = 'reviewSubmissions', 
                            id = '', )
                        ], ),
                subscription_grace_period = openapi_client.models.app_relationships_subscription_grace_period.App_relationships_subscriptionGracePeriod(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_relationships_subscription_grace_period_data.App_relationships_subscriptionGracePeriod_data(
                        type = 'subscriptionGracePeriods', 
                        id = '', ), ),
                customer_reviews = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                customer_review_summarizations = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                game_center_detail = openapi_client.models.app_relationships_game_center_detail.App_relationships_gameCenterDetail(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_relationships_game_center_detail_data.App_relationships_gameCenterDetail_data(
                        type = 'gameCenterDetails', 
                        id = '', ), ),
                app_store_version_experiments_v2 = openapi_client.models.app_store_version_relationships_app_store_version_experiments.AppStoreVersion_relationships_appStoreVersionExperiments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.app_store_version_experiment_treatment_relationships_app_store_version_experiment_data.AppStoreVersionExperimentTreatment_relationships_appStoreVersionExperiment_data(
                            type = 'appStoreVersionExperiments', 
                            id = '', )
                        ], ),
                alternative_distribution_key = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                analytics_report_requests = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                marketplace_search_detail = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                background_assets = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                beta_feedback_screenshot_submissions = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                beta_feedback_crash_submissions = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), ),
                webhooks = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), )
            )
        else:
            return AppRelationships(
        )
        """

    def testAppRelationships(self):
        """Test AppRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
