# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_promotional_offer_response import SubscriptionPromotionalOfferResponse

class TestSubscriptionPromotionalOfferResponse(unittest.TestCase):
    """SubscriptionPromotionalOfferResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionPromotionalOfferResponse:
        """Test SubscriptionPromotionalOfferResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionPromotionalOfferResponse`
        """
        model = SubscriptionPromotionalOfferResponse()
        if include_optional:
            return SubscriptionPromotionalOfferResponse(
                data = openapi_client.models.subscription_promotional_offer.SubscriptionPromotionalOffer(
                    type = 'subscriptionPromotionalOffers', 
                    id = '', 
                    attributes = openapi_client.models.subscription_promotional_offer_attributes.SubscriptionPromotionalOffer_attributes(
                        duration = 'THREE_DAYS', 
                        name = '', 
                        number_of_periods = 56, 
                        offer_code = '', 
                        offer_mode = 'PAY_AS_YOU_GO', ), 
                    relationships = openapi_client.models.subscription_promotional_offer_relationships.SubscriptionPromotionalOffer_relationships(
                        subscription = openapi_client.models.promoted_purchase_relationships_subscription.PromotedPurchase_relationships_subscription(
                            data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                                type = 'subscriptions', 
                                id = '', ), ), 
                        prices = openapi_client.models.subscription_promotional_offer_relationships_prices.SubscriptionPromotionalOffer_relationships_prices(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), 
                            meta = openapi_client.models.paging_information.PagingInformation(
                                paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                    total = 56, 
                                    limit = 56, 
                                    next_cursor = '', ), ), ), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                included = [
                    null
                    ],
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', )
            )
        else:
            return SubscriptionPromotionalOfferResponse(
                data = openapi_client.models.subscription_promotional_offer.SubscriptionPromotionalOffer(
                    type = 'subscriptionPromotionalOffers', 
                    id = '', 
                    attributes = openapi_client.models.subscription_promotional_offer_attributes.SubscriptionPromotionalOffer_attributes(
                        duration = 'THREE_DAYS', 
                        name = '', 
                        number_of_periods = 56, 
                        offer_code = '', 
                        offer_mode = 'PAY_AS_YOU_GO', ), 
                    relationships = openapi_client.models.subscription_promotional_offer_relationships.SubscriptionPromotionalOffer_relationships(
                        subscription = openapi_client.models.promoted_purchase_relationships_subscription.PromotedPurchase_relationships_subscription(
                            data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                                type = 'subscriptions', 
                                id = '', ), ), 
                        prices = openapi_client.models.subscription_promotional_offer_relationships_prices.SubscriptionPromotionalOffer_relationships_prices(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), 
                            meta = openapi_client.models.paging_information.PagingInformation(
                                paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                    total = 56, 
                                    limit = 56, 
                                    next_cursor = '', ), ), ), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', ),
        )
        """

    def testSubscriptionPromotionalOfferResponse(self):
        """Test SubscriptionPromotionalOfferResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
