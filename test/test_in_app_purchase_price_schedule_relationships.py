# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.in_app_purchase_price_schedule_relationships import InAppPurchasePriceScheduleRelationships

class TestInAppPurchasePriceScheduleRelationships(unittest.TestCase):
    """InAppPurchasePriceScheduleRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InAppPurchasePriceScheduleRelationships:
        """Test InAppPurchasePriceScheduleRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InAppPurchasePriceScheduleRelationships`
        """
        model = InAppPurchasePriceScheduleRelationships()
        if include_optional:
            return InAppPurchasePriceScheduleRelationships(
                base_territory = openapi_client.models.app_price_schedule_relationships_base_territory.AppPriceSchedule_relationships_baseTerritory(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    data = openapi_client.models.app_price_point_v3_relationships_territory_data.AppPricePointV3_relationships_territory_data(
                        type = 'territories', 
                        id = '', ), ),
                manual_prices = openapi_client.models.in_app_purchase_price_schedule_relationships_manual_prices.InAppPurchasePriceSchedule_relationships_manualPrices(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.in_app_purchase_price_schedule_relationships_manual_prices_data_inner.InAppPurchasePriceSchedule_relationships_manualPrices_data_inner(
                            type = 'inAppPurchasePrices', 
                            id = '', )
                        ], ),
                automatic_prices = openapi_client.models.in_app_purchase_price_schedule_relationships_manual_prices.InAppPurchasePriceSchedule_relationships_manualPrices(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.in_app_purchase_price_schedule_relationships_manual_prices_data_inner.InAppPurchasePriceSchedule_relationships_manualPrices_data_inner(
                            type = 'inAppPurchasePrices', 
                            id = '', )
                        ], )
            )
        else:
            return InAppPurchasePriceScheduleRelationships(
        )
        """

    def testInAppPurchasePriceScheduleRelationships(self):
        """Test InAppPurchasePriceScheduleRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
