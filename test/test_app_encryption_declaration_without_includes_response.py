# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_encryption_declaration_without_includes_response import AppEncryptionDeclarationWithoutIncludesResponse

class TestAppEncryptionDeclarationWithoutIncludesResponse(unittest.TestCase):
    """AppEncryptionDeclarationWithoutIncludesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppEncryptionDeclarationWithoutIncludesResponse:
        """Test AppEncryptionDeclarationWithoutIncludesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppEncryptionDeclarationWithoutIncludesResponse`
        """
        model = AppEncryptionDeclarationWithoutIncludesResponse()
        if include_optional:
            return AppEncryptionDeclarationWithoutIncludesResponse(
                data = openapi_client.models.app_encryption_declaration.AppEncryptionDeclaration(
                    type = 'appEncryptionDeclarations', 
                    id = '', 
                    attributes = openapi_client.models.app_encryption_declaration_attributes.AppEncryptionDeclaration_attributes(
                        app_description = '', 
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        uses_encryption = True, 
                        exempt = True, 
                        contains_proprietary_cryptography = True, 
                        contains_third_party_cryptography = True, 
                        available_on_french_store = True, 
                        platform = 'IOS', 
                        uploaded_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        document_url = '', 
                        document_name = '', 
                        document_type = '', 
                        app_encryption_declaration_state = 'CREATED', 
                        code_value = '', ), 
                    relationships = openapi_client.models.app_encryption_declaration_relationships.AppEncryptionDeclaration_relationships(
                        app = openapi_client.models.app_encryption_declaration_relationships_app.AppEncryptionDeclaration_relationships_app(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), 
                            data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', ), ), 
                        builds = openapi_client.models.app_encryption_declaration_relationships_builds.AppEncryptionDeclaration_relationships_builds(
                            meta = openapi_client.models.paging_information.PagingInformation(
                                paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                    total = 56, 
                                    limit = 56, 
                                    next_cursor = '', ), ), ), 
                        app_encryption_declaration_document = openapi_client.models.app_encryption_declaration_relationships_app_encryption_declaration_document.AppEncryptionDeclaration_relationships_appEncryptionDeclarationDocument(), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', )
            )
        else:
            return AppEncryptionDeclarationWithoutIncludesResponse(
                data = openapi_client.models.app_encryption_declaration.AppEncryptionDeclaration(
                    type = 'appEncryptionDeclarations', 
                    id = '', 
                    attributes = openapi_client.models.app_encryption_declaration_attributes.AppEncryptionDeclaration_attributes(
                        app_description = '', 
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        uses_encryption = True, 
                        exempt = True, 
                        contains_proprietary_cryptography = True, 
                        contains_third_party_cryptography = True, 
                        available_on_french_store = True, 
                        platform = 'IOS', 
                        uploaded_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        document_url = '', 
                        document_name = '', 
                        document_type = '', 
                        app_encryption_declaration_state = 'CREATED', 
                        code_value = '', ), 
                    relationships = openapi_client.models.app_encryption_declaration_relationships.AppEncryptionDeclaration_relationships(
                        app = openapi_client.models.app_encryption_declaration_relationships_app.AppEncryptionDeclaration_relationships_app(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), 
                            data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', ), ), 
                        builds = openapi_client.models.app_encryption_declaration_relationships_builds.AppEncryptionDeclaration_relationships_builds(
                            meta = openapi_client.models.paging_information.PagingInformation(
                                paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                    total = 56, 
                                    limit = 56, 
                                    next_cursor = '', ), ), ), 
                        app_encryption_declaration_document = openapi_client.models.app_encryption_declaration_relationships_app_encryption_declaration_document.AppEncryptionDeclaration_relationships_appEncryptionDeclarationDocument(), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', ),
        )
        """

    def testAppEncryptionDeclarationWithoutIncludesResponse(self):
        """Test AppEncryptionDeclarationWithoutIncludesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
