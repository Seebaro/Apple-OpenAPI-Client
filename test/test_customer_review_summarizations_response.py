# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.customer_review_summarizations_response import CustomerReviewSummarizationsResponse

class TestCustomerReviewSummarizationsResponse(unittest.TestCase):
    """CustomerReviewSummarizationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerReviewSummarizationsResponse:
        """Test CustomerReviewSummarizationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerReviewSummarizationsResponse`
        """
        model = CustomerReviewSummarizationsResponse()
        if include_optional:
            return CustomerReviewSummarizationsResponse(
                data = [
                    openapi_client.models.customer_review_summarization.CustomerReviewSummarization(
                        type = 'customerReviewSummarizations', 
                        id = '', 
                        attributes = openapi_client.models.customer_review_summarization_attributes.CustomerReviewSummarization_attributes(
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            locale = '', 
                            platform = 'IOS', 
                            text = '', ), 
                        relationships = openapi_client.models.customer_review_summarization_relationships.CustomerReviewSummarization_relationships(
                            territory = openapi_client.models.app_price_point_v3_relationships_territory.AppPricePointV3_relationships_territory(
                                data = openapi_client.models.app_price_point_v3_relationships_territory_data.AppPricePointV3_relationships_territory_data(
                                    type = 'territories', 
                                    id = '', ), ), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                included = [
                    openapi_client.models.territory.Territory(
                        type = 'territories', 
                        id = '', 
                        attributes = openapi_client.models.territory_attributes.Territory_attributes(
                            currency = '', ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        total = 56, 
                        limit = 56, 
                        next_cursor = '', ), )
            )
        else:
            return CustomerReviewSummarizationsResponse(
                data = [
                    openapi_client.models.customer_review_summarization.CustomerReviewSummarization(
                        type = 'customerReviewSummarizations', 
                        id = '', 
                        attributes = openapi_client.models.customer_review_summarization_attributes.CustomerReviewSummarization_attributes(
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            locale = '', 
                            platform = 'IOS', 
                            text = '', ), 
                        relationships = openapi_client.models.customer_review_summarization_relationships.CustomerReviewSummarization_relationships(
                            territory = openapi_client.models.app_price_point_v3_relationships_territory.AppPricePointV3_relationships_territory(
                                data = openapi_client.models.app_price_point_v3_relationships_territory_data.AppPricePointV3_relationships_territory_data(
                                    type = 'territories', 
                                    id = '', ), ), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
        )
        """

    def testCustomerReviewSummarizationsResponse(self):
        """Test CustomerReviewSummarizationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
