# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.promoted_purchases_response_included_inner import PromotedPurchasesResponseIncludedInner

class TestPromotedPurchasesResponseIncludedInner(unittest.TestCase):
    """PromotedPurchasesResponseIncludedInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PromotedPurchasesResponseIncludedInner:
        """Test PromotedPurchasesResponseIncludedInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PromotedPurchasesResponseIncludedInner`
        """
        model = PromotedPurchasesResponseIncludedInner()
        if include_optional:
            return PromotedPurchasesResponseIncludedInner(
                type = 'inAppPurchases',
                id = '',
                attributes = openapi_client.models.subscription_attributes.Subscription_attributes(
                    name = '', 
                    product_id = '', 
                    family_sharable = True, 
                    state = 'MISSING_METADATA', 
                    subscription_period = 'ONE_WEEK', 
                    review_note = '', 
                    group_level = 56, ),
                relationships = openapi_client.models.subscription_relationships.Subscription_relationships(
                    subscription_localizations = openapi_client.models.subscription_relationships_subscription_localizations.Subscription_relationships_subscriptionLocalizations(
                        links = openapi_client.models.relationship_links.RelationshipLinks(
                            self = '', 
                            related = '', ), 
                        meta = openapi_client.models.paging_information.PagingInformation(
                            paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                total = 56, 
                                limit = 56, 
                                next_cursor = '', ), ), 
                        data = [
                            openapi_client.models.subscription_relationships_subscription_localizations_data_inner.Subscription_relationships_subscriptionLocalizations_data_inner(
                                type = 'subscriptionLocalizations', 
                                id = '', )
                            ], ), 
                    app_store_review_screenshot = openapi_client.models.subscription_relationships_app_store_review_screenshot.Subscription_relationships_appStoreReviewScreenshot(), 
                    group = openapi_client.models.subscription_group_localization_relationships_subscription_group.SubscriptionGroupLocalization_relationships_subscriptionGroup(), 
                    introductory_offers = openapi_client.models.subscription_relationships_introductory_offers.Subscription_relationships_introductoryOffers(), 
                    promotional_offers = openapi_client.models.subscription_relationships_promotional_offers.Subscription_relationships_promotionalOffers(), 
                    offer_codes = openapi_client.models.subscription_relationships_offer_codes.Subscription_relationships_offerCodes(), 
                    prices = openapi_client.models.subscription_relationships_prices.Subscription_relationships_prices(), 
                    price_points = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(), 
                    promoted_purchase = openapi_client.models.in_app_purchase_v2_relationships_promoted_purchase.InAppPurchaseV2_relationships_promotedPurchase(), 
                    subscription_availability = openapi_client.models.subscription_relationships_subscription_availability.Subscription_relationships_subscriptionAvailability(), 
                    win_back_offers = openapi_client.models.subscription_relationships_win_back_offers.Subscription_relationships_winBackOffers(), 
                    images = openapi_client.models.subscription_relationships_images.Subscription_relationships_images(), ),
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', )
            )
        else:
            return PromotedPurchasesResponseIncludedInner(
                type = 'inAppPurchases',
                id = '',
        )
        """

    def testPromotedPurchasesResponseIncludedInner(self):
        """Test PromotedPurchasesResponseIncludedInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
