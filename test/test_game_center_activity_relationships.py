# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_activity_relationships import GameCenterActivityRelationships

class TestGameCenterActivityRelationships(unittest.TestCase):
    """GameCenterActivityRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterActivityRelationships:
        """Test GameCenterActivityRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterActivityRelationships`
        """
        model = GameCenterActivityRelationships()
        if include_optional:
            return GameCenterActivityRelationships(
                game_center_detail = openapi_client.models.game_center_achievement_release_relationships_game_center_detail.GameCenterAchievementRelease_relationships_gameCenterDetail(
                    data = openapi_client.models.app_relationships_game_center_detail_data.App_relationships_gameCenterDetail_data(
                        type = 'gameCenterDetails', 
                        id = '', ), ),
                game_center_group = openapi_client.models.game_center_achievement_relationships_game_center_group.GameCenterAchievement_relationships_gameCenterGroup(
                    data = openapi_client.models.game_center_achievement_relationships_game_center_group_data.GameCenterAchievement_relationships_gameCenterGroup_data(
                        type = 'gameCenterGroups', 
                        id = '', ), ),
                achievements = openapi_client.models.game_center_activity_relationships_achievements.GameCenterActivity_relationships_achievements(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_achievement_localization_relationships_game_center_achievement_data.GameCenterAchievementLocalization_relationships_gameCenterAchievement_data(
                            type = 'gameCenterAchievements', 
                            id = '', )
                        ], ),
                leaderboards = openapi_client.models.game_center_activity_relationships_leaderboards.GameCenterActivity_relationships_leaderboards(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_activity_relationships_leaderboards_data_inner.GameCenterActivity_relationships_leaderboards_data_inner(
                            type = 'gameCenterLeaderboards', 
                            id = '', )
                        ], ),
                versions = openapi_client.models.game_center_activity_relationships_versions.GameCenterActivity_relationships_versions(
                    links = openapi_client.models.relationship_links.RelationshipLinks(
                        self = '', 
                        related = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            total = 56, 
                            limit = 56, 
                            next_cursor = '', ), ), 
                    data = [
                        openapi_client.models.game_center_activity_relationships_versions_data_inner.GameCenterActivity_relationships_versions_data_inner(
                            type = 'gameCenterActivityVersions', 
                            id = '', )
                        ], )
            )
        else:
            return GameCenterActivityRelationships(
        )
        """

    def testGameCenterActivityRelationships(self):
        """Test GameCenterActivityRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
