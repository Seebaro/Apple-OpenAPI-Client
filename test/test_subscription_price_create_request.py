# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_price_create_request import SubscriptionPriceCreateRequest

class TestSubscriptionPriceCreateRequest(unittest.TestCase):
    """SubscriptionPriceCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionPriceCreateRequest:
        """Test SubscriptionPriceCreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionPriceCreateRequest`
        """
        model = SubscriptionPriceCreateRequest()
        if include_optional:
            return SubscriptionPriceCreateRequest(
                data = openapi_client.models.subscription_price_create_request_data.SubscriptionPriceCreateRequest_data(
                    type = 'subscriptionPrices', 
                    attributes = openapi_client.models.subscription_price_inline_create_attributes.SubscriptionPriceInlineCreate_attributes(
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        preserve_current_price = True, ), 
                    relationships = openapi_client.models.subscription_price_create_request_data_relationships.SubscriptionPriceCreateRequest_data_relationships(
                        subscription = openapi_client.models.subscription_app_store_review_screenshot_create_request_data_relationships_subscription.SubscriptionAppStoreReviewScreenshotCreateRequest_data_relationships_subscription(
                            data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                                type = 'subscriptions', 
                                id = '', ), ), 
                        territory = openapi_client.models.app_price_point_v3_relationships_territory.AppPricePointV3_relationships_territory(), 
                        subscription_price_point = openapi_client.models.subscription_price_create_request_data_relationships_subscription_price_point.SubscriptionPriceCreateRequest_data_relationships_subscriptionPricePoint(
                            data = openapi_client.models.subscription_introductory_offer_relationships_subscription_price_point_data.SubscriptionIntroductoryOffer_relationships_subscriptionPricePoint_data(
                                type = 'subscriptionPricePoints', 
                                id = '', ), ), ), )
            )
        else:
            return SubscriptionPriceCreateRequest(
                data = openapi_client.models.subscription_price_create_request_data.SubscriptionPriceCreateRequest_data(
                    type = 'subscriptionPrices', 
                    attributes = openapi_client.models.subscription_price_inline_create_attributes.SubscriptionPriceInlineCreate_attributes(
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        preserve_current_price = True, ), 
                    relationships = openapi_client.models.subscription_price_create_request_data_relationships.SubscriptionPriceCreateRequest_data_relationships(
                        subscription = openapi_client.models.subscription_app_store_review_screenshot_create_request_data_relationships_subscription.SubscriptionAppStoreReviewScreenshotCreateRequest_data_relationships_subscription(
                            data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                                type = 'subscriptions', 
                                id = '', ), ), 
                        territory = openapi_client.models.app_price_point_v3_relationships_territory.AppPricePointV3_relationships_territory(), 
                        subscription_price_point = openapi_client.models.subscription_price_create_request_data_relationships_subscription_price_point.SubscriptionPriceCreateRequest_data_relationships_subscriptionPricePoint(
                            data = openapi_client.models.subscription_introductory_offer_relationships_subscription_price_point_data.SubscriptionIntroductoryOffer_relationships_subscriptionPricePoint_data(
                                type = 'subscriptionPricePoints', 
                                id = '', ), ), ), ),
        )
        """

    def testSubscriptionPriceCreateRequest(self):
        """Test SubscriptionPriceCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
