# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.webhook_delivery_attributes import WebhookDeliveryAttributes

class TestWebhookDeliveryAttributes(unittest.TestCase):
    """WebhookDeliveryAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookDeliveryAttributes:
        """Test WebhookDeliveryAttributes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookDeliveryAttributes`
        """
        model = WebhookDeliveryAttributes()
        if include_optional:
            return WebhookDeliveryAttributes(
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                delivery_state = 'SUCCEEDED',
                error_message = '',
                redelivery = True,
                sent_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                request = openapi_client.models.beta_app_clip_invocation_attributes.BetaAppClipInvocation_attributes(
                    url = '', ),
                response = openapi_client.models.webhook_delivery_attributes_response.WebhookDelivery_attributes_response(
                    http_status_code = 56, 
                    body = '', )
            )
        else:
            return WebhookDeliveryAttributes(
        )
        """

    def testWebhookDeliveryAttributes(self):
        """Test WebhookDeliveryAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
