# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xcode_metrics_insights import XcodeMetricsInsights

class TestXcodeMetricsInsights(unittest.TestCase):
    """XcodeMetricsInsights unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XcodeMetricsInsights:
        """Test XcodeMetricsInsights
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XcodeMetricsInsights`
        """
        model = XcodeMetricsInsights()
        if include_optional:
            return XcodeMetricsInsights(
                trending_up = [
                    openapi_client.models.metrics_insight.MetricsInsight(
                        metric_category = 'HANG', 
                        latest_version = '', 
                        metric = '', 
                        summary_string = '', 
                        reference_versions = '', 
                        max_latest_version_value = 1.337, 
                        sub_system_label = '', 
                        high_impact = True, 
                        populations = [
                            openapi_client.models.metrics_insight_populations_inner.MetricsInsight_populations_inner(
                                delta_percentage = 1.337, 
                                percentile = '', 
                                summary_string = '', 
                                reference_average_value = 1.337, 
                                latest_version_value = 1.337, 
                                device = '', )
                            ], )
                    ],
                regressions = [
                    openapi_client.models.metrics_insight.MetricsInsight(
                        metric_category = 'HANG', 
                        latest_version = '', 
                        metric = '', 
                        summary_string = '', 
                        reference_versions = '', 
                        max_latest_version_value = 1.337, 
                        sub_system_label = '', 
                        high_impact = True, 
                        populations = [
                            openapi_client.models.metrics_insight_populations_inner.MetricsInsight_populations_inner(
                                delta_percentage = 1.337, 
                                percentile = '', 
                                summary_string = '', 
                                reference_average_value = 1.337, 
                                latest_version_value = 1.337, 
                                device = '', )
                            ], )
                    ]
            )
        else:
            return XcodeMetricsInsights(
        )
        """

    def testXcodeMetricsInsights(self):
        """Test XcodeMetricsInsights"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
