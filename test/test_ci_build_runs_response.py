# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ci_build_runs_response import CiBuildRunsResponse

class TestCiBuildRunsResponse(unittest.TestCase):
    """CiBuildRunsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CiBuildRunsResponse:
        """Test CiBuildRunsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CiBuildRunsResponse`
        """
        model = CiBuildRunsResponse()
        if include_optional:
            return CiBuildRunsResponse(
                data = [
                    openapi_client.models.ci_build_run.CiBuildRun(
                        type = 'ciBuildRuns', 
                        id = '', 
                        attributes = openapi_client.models.ci_build_run_attributes.CiBuildRun_attributes(
                            number = 56, 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            started_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finished_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            source_commit = openapi_client.models.ci_build_run_attributes_source_commit.CiBuildRun_attributes_sourceCommit(
                                commit_sha = '', 
                                message = '', 
                                author = openapi_client.models.ci_git_user.CiGitUser(
                                    display_name = '', 
                                    avatar_url = '', ), 
                                committer = openapi_client.models.ci_git_user.CiGitUser(
                                    display_name = '', 
                                    avatar_url = '', ), 
                                web_url = '', ), 
                            destination_commit = openapi_client.models.ci_build_run_attributes_source_commit.CiBuildRun_attributes_sourceCommit(
                                commit_sha = '', 
                                message = '', 
                                web_url = '', ), 
                            is_pull_request_build = True, 
                            issue_counts = openapi_client.models.ci_issue_counts.CiIssueCounts(
                                analyzer_warnings = 56, 
                                errors = 56, 
                                test_failures = 56, 
                                warnings = 56, ), 
                            execution_progress = 'PENDING', 
                            completion_status = 'SUCCEEDED', 
                            start_reason = 'GIT_REF_CHANGE', 
                            cancel_reason = 'AUTOMATICALLY_BY_NEWER_BUILD', ), 
                        relationships = openapi_client.models.ci_build_run_relationships.CiBuildRun_relationships(
                            builds = openapi_client.models.app_relationships_builds.App_relationships_builds(
                                links = openapi_client.models.relationship_links.RelationshipLinks(
                                    self = '', 
                                    related = '', ), 
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        total = 56, 
                                        limit = 56, 
                                        next_cursor = '', ), ), 
                                data = [
                                    openapi_client.models.app_encryption_declaration_relationships_builds_data_inner.AppEncryptionDeclaration_relationships_builds_data_inner(
                                        type = 'builds', 
                                        id = '', )
                                    ], ), 
                            workflow = openapi_client.models.ci_build_run_relationships_workflow.CiBuildRun_relationships_workflow(), 
                            product = openapi_client.models.ci_build_run_relationships_product.CiBuildRun_relationships_product(), 
                            source_branch_or_tag = openapi_client.models.ci_build_run_relationships_source_branch_or_tag.CiBuildRun_relationships_sourceBranchOrTag(), 
                            destination_branch = openapi_client.models.ci_build_run_relationships_source_branch_or_tag.CiBuildRun_relationships_sourceBranchOrTag(), 
                            actions = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(), 
                            pull_request = openapi_client.models.ci_build_run_relationships_pull_request.CiBuildRun_relationships_pullRequest(), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                included = [
                    null
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        total = 56, 
                        limit = 56, 
                        next_cursor = '', ), )
            )
        else:
            return CiBuildRunsResponse(
                data = [
                    openapi_client.models.ci_build_run.CiBuildRun(
                        type = 'ciBuildRuns', 
                        id = '', 
                        attributes = openapi_client.models.ci_build_run_attributes.CiBuildRun_attributes(
                            number = 56, 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            started_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finished_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            source_commit = openapi_client.models.ci_build_run_attributes_source_commit.CiBuildRun_attributes_sourceCommit(
                                commit_sha = '', 
                                message = '', 
                                author = openapi_client.models.ci_git_user.CiGitUser(
                                    display_name = '', 
                                    avatar_url = '', ), 
                                committer = openapi_client.models.ci_git_user.CiGitUser(
                                    display_name = '', 
                                    avatar_url = '', ), 
                                web_url = '', ), 
                            destination_commit = openapi_client.models.ci_build_run_attributes_source_commit.CiBuildRun_attributes_sourceCommit(
                                commit_sha = '', 
                                message = '', 
                                web_url = '', ), 
                            is_pull_request_build = True, 
                            issue_counts = openapi_client.models.ci_issue_counts.CiIssueCounts(
                                analyzer_warnings = 56, 
                                errors = 56, 
                                test_failures = 56, 
                                warnings = 56, ), 
                            execution_progress = 'PENDING', 
                            completion_status = 'SUCCEEDED', 
                            start_reason = 'GIT_REF_CHANGE', 
                            cancel_reason = 'AUTOMATICALLY_BY_NEWER_BUILD', ), 
                        relationships = openapi_client.models.ci_build_run_relationships.CiBuildRun_relationships(
                            builds = openapi_client.models.app_relationships_builds.App_relationships_builds(
                                links = openapi_client.models.relationship_links.RelationshipLinks(
                                    self = '', 
                                    related = '', ), 
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        total = 56, 
                                        limit = 56, 
                                        next_cursor = '', ), ), 
                                data = [
                                    openapi_client.models.app_encryption_declaration_relationships_builds_data_inner.AppEncryptionDeclaration_relationships_builds_data_inner(
                                        type = 'builds', 
                                        id = '', )
                                    ], ), 
                            workflow = openapi_client.models.ci_build_run_relationships_workflow.CiBuildRun_relationships_workflow(), 
                            product = openapi_client.models.ci_build_run_relationships_product.CiBuildRun_relationships_product(), 
                            source_branch_or_tag = openapi_client.models.ci_build_run_relationships_source_branch_or_tag.CiBuildRun_relationships_sourceBranchOrTag(), 
                            destination_branch = openapi_client.models.ci_build_run_relationships_source_branch_or_tag.CiBuildRun_relationships_sourceBranchOrTag(), 
                            actions = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(), 
                            pull_request = openapi_client.models.ci_build_run_relationships_pull_request.CiBuildRun_relationships_pullRequest(), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
        )
        """

    def testCiBuildRunsResponse(self):
        """Test CiBuildRunsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
