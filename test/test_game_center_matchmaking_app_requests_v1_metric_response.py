# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response import GameCenterMatchmakingAppRequestsV1MetricResponse

class TestGameCenterMatchmakingAppRequestsV1MetricResponse(unittest.TestCase):
    """GameCenterMatchmakingAppRequestsV1MetricResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterMatchmakingAppRequestsV1MetricResponse:
        """Test GameCenterMatchmakingAppRequestsV1MetricResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterMatchmakingAppRequestsV1MetricResponse`
        """
        model = GameCenterMatchmakingAppRequestsV1MetricResponse()
        if include_optional:
            return GameCenterMatchmakingAppRequestsV1MetricResponse(
                data = [
                    openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner(
                        data_points = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_data_points.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dataPoints(
                            start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            values = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_data_points_values.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dataPoints_values(
                                count = 56, 
                                average_seconds_in_queue = 1.337, 
                                p50_seconds_in_queue = 1.337, 
                                p95_seconds_in_queue = 1.337, ), ), 
                        dimensions = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_dimensions.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dimensions(
                            result = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_dimensions_result.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dimensions_result(
                                links = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_dimensions_result_links.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dimensions_result_links(
                                    group_by = '', ), 
                                data = 'MATCHED', ), ), 
                        granularity = 'P1D', )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        total = 56, 
                        limit = 56, 
                        next_cursor = '', ), )
            )
        else:
            return GameCenterMatchmakingAppRequestsV1MetricResponse(
                data = [
                    openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner(
                        data_points = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_data_points.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dataPoints(
                            start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            values = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_data_points_values.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dataPoints_values(
                                count = 56, 
                                average_seconds_in_queue = 1.337, 
                                p50_seconds_in_queue = 1.337, 
                                p95_seconds_in_queue = 1.337, ), ), 
                        dimensions = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_dimensions.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dimensions(
                            result = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_dimensions_result.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dimensions_result(
                                links = openapi_client.models.game_center_matchmaking_app_requests_v1_metric_response_data_inner_dimensions_result_links.GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dimensions_result_links(
                                    group_by = '', ), 
                                data = 'MATCHED', ), ), 
                        granularity = 'P1D', )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    self = '', 
                    first = '', 
                    next = '', ),
        )
        """

    def testGameCenterMatchmakingAppRequestsV1MetricResponse(self):
        """Test GameCenterMatchmakingAppRequestsV1MetricResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
