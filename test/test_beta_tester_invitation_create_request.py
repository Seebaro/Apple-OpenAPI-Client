# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.beta_tester_invitation_create_request import BetaTesterInvitationCreateRequest

class TestBetaTesterInvitationCreateRequest(unittest.TestCase):
    """BetaTesterInvitationCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BetaTesterInvitationCreateRequest:
        """Test BetaTesterInvitationCreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BetaTesterInvitationCreateRequest`
        """
        model = BetaTesterInvitationCreateRequest()
        if include_optional:
            return BetaTesterInvitationCreateRequest(
                data = openapi_client.models.beta_tester_invitation_create_request_data.BetaTesterInvitationCreateRequest_data(
                    type = 'betaTesterInvitations', 
                    relationships = openapi_client.models.beta_tester_invitation_create_request_data_relationships.BetaTesterInvitationCreateRequest_data_relationships(
                        beta_tester = openapi_client.models.beta_tester_invitation_create_request_data_relationships_beta_tester.BetaTesterInvitationCreateRequest_data_relationships_betaTester(
                            data = openapi_client.models.beta_feedback_crash_submission_relationships_tester_data.BetaFeedbackCrashSubmission_relationships_tester_data(
                                type = 'betaTesters', 
                                id = '', ), ), 
                        app = openapi_client.models.accessibility_declaration_create_request_data_relationships_app.AccessibilityDeclarationCreateRequest_data_relationships_app(
                            data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', ), ), ), )
            )
        else:
            return BetaTesterInvitationCreateRequest(
                data = openapi_client.models.beta_tester_invitation_create_request_data.BetaTesterInvitationCreateRequest_data(
                    type = 'betaTesterInvitations', 
                    relationships = openapi_client.models.beta_tester_invitation_create_request_data_relationships.BetaTesterInvitationCreateRequest_data_relationships(
                        beta_tester = openapi_client.models.beta_tester_invitation_create_request_data_relationships_beta_tester.BetaTesterInvitationCreateRequest_data_relationships_betaTester(
                            data = openapi_client.models.beta_feedback_crash_submission_relationships_tester_data.BetaFeedbackCrashSubmission_relationships_tester_data(
                                type = 'betaTesters', 
                                id = '', ), ), 
                        app = openapi_client.models.accessibility_declaration_create_request_data_relationships_app.AccessibilityDeclarationCreateRequest_data_relationships_app(
                            data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', ), ), ), ),
        )
        """

    def testBetaTesterInvitationCreateRequest(self):
        """Test BetaTesterInvitationCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
