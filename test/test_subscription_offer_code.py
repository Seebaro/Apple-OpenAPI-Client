# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_offer_code import SubscriptionOfferCode

class TestSubscriptionOfferCode(unittest.TestCase):
    """SubscriptionOfferCode unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionOfferCode:
        """Test SubscriptionOfferCode
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionOfferCode`
        """
        model = SubscriptionOfferCode()
        if include_optional:
            return SubscriptionOfferCode(
                type = 'subscriptionOfferCodes',
                id = '',
                attributes = openapi_client.models.subscription_offer_code_attributes.SubscriptionOfferCode_attributes(
                    name = '', 
                    customer_eligibilities = [
                        'NEW'
                        ], 
                    offer_eligibility = 'STACK_WITH_INTRO_OFFERS', 
                    duration = 'THREE_DAYS', 
                    offer_mode = 'PAY_AS_YOU_GO', 
                    number_of_periods = 56, 
                    active = True, ),
                relationships = openapi_client.models.subscription_offer_code_relationships.SubscriptionOfferCode_relationships(
                    subscription = openapi_client.models.promoted_purchase_relationships_subscription.PromotedPurchase_relationships_subscription(
                        data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                            type = 'subscriptions', 
                            id = '', ), ), 
                    one_time_use_codes = openapi_client.models.subscription_offer_code_relationships_one_time_use_codes.SubscriptionOfferCode_relationships_oneTimeUseCodes(
                        links = openapi_client.models.relationship_links.RelationshipLinks(
                            self = '', 
                            related = '', ), 
                        meta = openapi_client.models.paging_information.PagingInformation(
                            paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                total = 56, 
                                limit = 56, 
                                next_cursor = '', ), ), ), 
                    custom_codes = openapi_client.models.subscription_offer_code_relationships_custom_codes.SubscriptionOfferCode_relationships_customCodes(), 
                    prices = openapi_client.models.subscription_offer_code_relationships_prices.SubscriptionOfferCode_relationships_prices(), ),
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', )
            )
        else:
            return SubscriptionOfferCode(
                type = 'subscriptionOfferCodes',
                id = '',
        )
        """

    def testSubscriptionOfferCode(self):
        """Test SubscriptionOfferCode"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
