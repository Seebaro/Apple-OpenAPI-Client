# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_availability_create_request_data import SubscriptionAvailabilityCreateRequestData

class TestSubscriptionAvailabilityCreateRequestData(unittest.TestCase):
    """SubscriptionAvailabilityCreateRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionAvailabilityCreateRequestData:
        """Test SubscriptionAvailabilityCreateRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionAvailabilityCreateRequestData`
        """
        model = SubscriptionAvailabilityCreateRequestData()
        if include_optional:
            return SubscriptionAvailabilityCreateRequestData(
                type = 'subscriptionAvailabilities',
                attributes = openapi_client.models.app_availability_v2_create_request_data_attributes.AppAvailabilityV2CreateRequest_data_attributes(
                    available_in_new_territories = True, ),
                relationships = openapi_client.models.subscription_availability_create_request_data_relationships.SubscriptionAvailabilityCreateRequest_data_relationships(
                    subscription = openapi_client.models.subscription_app_store_review_screenshot_create_request_data_relationships_subscription.SubscriptionAppStoreReviewScreenshotCreateRequest_data_relationships_subscription(
                        data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                            type = 'subscriptions', 
                            id = '', ), ), 
                    available_territories = openapi_client.models.end_user_license_agreement_create_request_data_relationships_territories.EndUserLicenseAgreementCreateRequest_data_relationships_territories(
                        data = [
                            openapi_client.models.app_price_point_v3_relationships_territory_data.AppPricePointV3_relationships_territory_data(
                                type = 'territories', 
                                id = '', )
                            ], ), )
            )
        else:
            return SubscriptionAvailabilityCreateRequestData(
                type = 'subscriptionAvailabilities',
                attributes = openapi_client.models.app_availability_v2_create_request_data_attributes.AppAvailabilityV2CreateRequest_data_attributes(
                    available_in_new_territories = True, ),
                relationships = openapi_client.models.subscription_availability_create_request_data_relationships.SubscriptionAvailabilityCreateRequest_data_relationships(
                    subscription = openapi_client.models.subscription_app_store_review_screenshot_create_request_data_relationships_subscription.SubscriptionAppStoreReviewScreenshotCreateRequest_data_relationships_subscription(
                        data = openapi_client.models.promoted_purchase_relationships_subscription_data.PromotedPurchase_relationships_subscription_data(
                            type = 'subscriptions', 
                            id = '', ), ), 
                    available_territories = openapi_client.models.end_user_license_agreement_create_request_data_relationships_territories.EndUserLicenseAgreementCreateRequest_data_relationships_territories(
                        data = [
                            openapi_client.models.app_price_point_v3_relationships_territory_data.AppPricePointV3_relationships_territory_data(
                                type = 'territories', 
                                id = '', )
                            ], ), ),
        )
        """

    def testSubscriptionAvailabilityCreateRequestData(self):
        """Test SubscriptionAvailabilityCreateRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
