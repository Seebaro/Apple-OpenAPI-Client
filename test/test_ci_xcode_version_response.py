# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ci_xcode_version_response import CiXcodeVersionResponse

class TestCiXcodeVersionResponse(unittest.TestCase):
    """CiXcodeVersionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CiXcodeVersionResponse:
        """Test CiXcodeVersionResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CiXcodeVersionResponse`
        """
        model = CiXcodeVersionResponse()
        if include_optional:
            return CiXcodeVersionResponse(
                data = openapi_client.models.ci_xcode_version.CiXcodeVersion(
                    type = 'ciXcodeVersions', 
                    id = '', 
                    attributes = openapi_client.models.ci_xcode_version_attributes.CiXcodeVersion_attributes(
                        version = '', 
                        name = '', 
                        test_destinations = [
                            openapi_client.models.ci_xcode_version_attributes_test_destinations_inner.CiXcodeVersion_attributes_testDestinations_inner(
                                device_type_name = '', 
                                device_type_identifier = '', 
                                available_runtimes = [
                                    openapi_client.models.ci_xcode_version_attributes_test_destinations_inner_available_runtimes_inner.CiXcodeVersion_attributes_testDestinations_inner_availableRuntimes_inner(
                                        runtime_name = '', 
                                        runtime_identifier = '', )
                                    ], 
                                kind = 'SIMULATOR', )
                            ], ), 
                    relationships = openapi_client.models.ci_xcode_version_relationships.CiXcodeVersion_relationships(
                        mac_os_versions = openapi_client.models.ci_xcode_version_relationships_mac_os_versions.CiXcodeVersion_relationships_macOsVersions(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), 
                            meta = openapi_client.models.paging_information.PagingInformation(
                                paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                    total = 56, 
                                    limit = 56, 
                                    next_cursor = '', ), ), 
                            data = [
                                openapi_client.models.ci_workflow_relationships_mac_os_version_data.CiWorkflow_relationships_macOsVersion_data(
                                    type = 'ciMacOsVersions', 
                                    id = '', )
                                ], ), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                included = [
                    openapi_client.models.ci_mac_os_version.CiMacOsVersion(
                        type = 'ciMacOsVersions', 
                        id = '', 
                        attributes = openapi_client.models.ci_mac_os_version_attributes.CiMacOsVersion_attributes(
                            version = '', 
                            name = '', ), 
                        relationships = openapi_client.models.ci_mac_os_version_relationships.CiMacOsVersion_relationships(
                            xcode_versions = openapi_client.models.ci_mac_os_version_relationships_xcode_versions.CiMacOsVersion_relationships_xcodeVersions(
                                links = openapi_client.models.relationship_links.RelationshipLinks(
                                    self = '', 
                                    related = '', ), 
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        total = 56, 
                                        limit = 56, 
                                        next_cursor = '', ), ), 
                                data = [
                                    openapi_client.models.ci_mac_os_version_relationships_xcode_versions_data_inner.CiMacOsVersion_relationships_xcodeVersions_data_inner(
                                        type = 'ciXcodeVersions', 
                                        id = '', )
                                    ], ), ), 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), )
                    ],
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', )
            )
        else:
            return CiXcodeVersionResponse(
                data = openapi_client.models.ci_xcode_version.CiXcodeVersion(
                    type = 'ciXcodeVersions', 
                    id = '', 
                    attributes = openapi_client.models.ci_xcode_version_attributes.CiXcodeVersion_attributes(
                        version = '', 
                        name = '', 
                        test_destinations = [
                            openapi_client.models.ci_xcode_version_attributes_test_destinations_inner.CiXcodeVersion_attributes_testDestinations_inner(
                                device_type_name = '', 
                                device_type_identifier = '', 
                                available_runtimes = [
                                    openapi_client.models.ci_xcode_version_attributes_test_destinations_inner_available_runtimes_inner.CiXcodeVersion_attributes_testDestinations_inner_availableRuntimes_inner(
                                        runtime_name = '', 
                                        runtime_identifier = '', )
                                    ], 
                                kind = 'SIMULATOR', )
                            ], ), 
                    relationships = openapi_client.models.ci_xcode_version_relationships.CiXcodeVersion_relationships(
                        mac_os_versions = openapi_client.models.ci_xcode_version_relationships_mac_os_versions.CiXcodeVersion_relationships_macOsVersions(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), 
                            meta = openapi_client.models.paging_information.PagingInformation(
                                paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                    total = 56, 
                                    limit = 56, 
                                    next_cursor = '', ), ), 
                            data = [
                                openapi_client.models.ci_workflow_relationships_mac_os_version_data.CiWorkflow_relationships_macOsVersion_data(
                                    type = 'ciMacOsVersions', 
                                    id = '', )
                                ], ), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', ),
        )
        """

    def testCiXcodeVersionResponse(self):
        """Test CiXcodeVersionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
