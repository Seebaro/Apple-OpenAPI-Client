# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_price_point_v3_response import AppPricePointV3Response

class TestAppPricePointV3Response(unittest.TestCase):
    """AppPricePointV3Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppPricePointV3Response:
        """Test AppPricePointV3Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppPricePointV3Response`
        """
        model = AppPricePointV3Response()
        if include_optional:
            return AppPricePointV3Response(
                data = openapi_client.models.app_price_point_v3.AppPricePointV3(
                    type = 'appPricePoints', 
                    id = '', 
                    attributes = openapi_client.models.app_price_point_v3_attributes.AppPricePointV3_attributes(
                        customer_price = '', 
                        proceeds = '', ), 
                    relationships = openapi_client.models.app_price_point_v3_relationships.AppPricePointV3_relationships(
                        app = openapi_client.models.alternative_distribution_key_create_request_data_relationships_app.AlternativeDistributionKeyCreateRequest_data_relationships_app(
                            data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', ), ), 
                        equalizations = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), ), 
                        territory = openapi_client.models.app_price_point_v3_relationships_territory.AppPricePointV3_relationships_territory(), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                included = [
                    null
                    ],
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', )
            )
        else:
            return AppPricePointV3Response(
                data = openapi_client.models.app_price_point_v3.AppPricePointV3(
                    type = 'appPricePoints', 
                    id = '', 
                    attributes = openapi_client.models.app_price_point_v3_attributes.AppPricePointV3_attributes(
                        customer_price = '', 
                        proceeds = '', ), 
                    relationships = openapi_client.models.app_price_point_v3_relationships.AppPricePointV3_relationships(
                        app = openapi_client.models.alternative_distribution_key_create_request_data_relationships_app.AlternativeDistributionKeyCreateRequest_data_relationships_app(
                            data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                                type = 'apps', 
                                id = '', ), ), 
                        equalizations = openapi_client.models.analytics_report_instance_relationships_segments.AnalyticsReportInstance_relationships_segments(
                            links = openapi_client.models.relationship_links.RelationshipLinks(
                                self = '', 
                                related = '', ), ), 
                        territory = openapi_client.models.app_price_point_v3_relationships_territory.AppPricePointV3_relationships_territory(), ), 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', ),
        )
        """

    def testAppPricePointV3Response(self):
        """Test AppPricePointV3Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
