# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request import SandboxTestersClearPurchaseHistoryRequestV2CreateRequest

class TestSandboxTestersClearPurchaseHistoryRequestV2CreateRequest(unittest.TestCase):
    """SandboxTestersClearPurchaseHistoryRequestV2CreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SandboxTestersClearPurchaseHistoryRequestV2CreateRequest:
        """Test SandboxTestersClearPurchaseHistoryRequestV2CreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SandboxTestersClearPurchaseHistoryRequestV2CreateRequest`
        """
        model = SandboxTestersClearPurchaseHistoryRequestV2CreateRequest()
        if include_optional:
            return SandboxTestersClearPurchaseHistoryRequestV2CreateRequest(
                data = openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request_data.SandboxTestersClearPurchaseHistoryRequestV2CreateRequest_data(
                    type = 'sandboxTestersClearPurchaseHistoryRequest', 
                    relationships = openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request_data_relationships.SandboxTestersClearPurchaseHistoryRequestV2CreateRequest_data_relationships(
                        sandbox_testers = openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request_data_relationships_sandbox_testers.SandboxTestersClearPurchaseHistoryRequestV2CreateRequest_data_relationships_sandboxTesters(
                            data = [
                                openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request_data_relationships_sandbox_testers_data_inner.SandboxTestersClearPurchaseHistoryRequestV2CreateRequest_data_relationships_sandboxTesters_data_inner(
                                    type = 'sandboxTesters', 
                                    id = '', )
                                ], ), ), )
            )
        else:
            return SandboxTestersClearPurchaseHistoryRequestV2CreateRequest(
                data = openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request_data.SandboxTestersClearPurchaseHistoryRequestV2CreateRequest_data(
                    type = 'sandboxTestersClearPurchaseHistoryRequest', 
                    relationships = openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request_data_relationships.SandboxTestersClearPurchaseHistoryRequestV2CreateRequest_data_relationships(
                        sandbox_testers = openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request_data_relationships_sandbox_testers.SandboxTestersClearPurchaseHistoryRequestV2CreateRequest_data_relationships_sandboxTesters(
                            data = [
                                openapi_client.models.sandbox_testers_clear_purchase_history_request_v2_create_request_data_relationships_sandbox_testers_data_inner.SandboxTestersClearPurchaseHistoryRequestV2CreateRequest_data_relationships_sandboxTesters_data_inner(
                                    type = 'sandboxTesters', 
                                    id = '', )
                                ], ), ), ),
        )
        """

    def testSandboxTestersClearPurchaseHistoryRequestV2CreateRequest(self):
        """Test SandboxTestersClearPurchaseHistoryRequestV2CreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
