# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_event_video_clip_attributes import AppEventVideoClipAttributes

class TestAppEventVideoClipAttributes(unittest.TestCase):
    """AppEventVideoClipAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppEventVideoClipAttributes:
        """Test AppEventVideoClipAttributes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppEventVideoClipAttributes`
        """
        model = AppEventVideoClipAttributes()
        if include_optional:
            return AppEventVideoClipAttributes(
                file_size = 56,
                file_name = '',
                preview_frame_time_code = '',
                video_url = '',
                preview_frame_image = openapi_client.models.preview_frame_image.PreviewFrameImage(
                    image = openapi_client.models.image_asset.ImageAsset(
                        template_url = '', 
                        width = 56, 
                        height = 56, ), 
                    state = openapi_client.models.app_media_preview_frame_image_state.AppMediaPreviewFrameImageState(
                        errors = [
                            openapi_client.models.app_media_state_error.AppMediaStateError(
                                code = '', 
                                description = '', )
                            ], 
                        warnings = [
                            openapi_client.models.app_media_state_error.AppMediaStateError(
                                code = '', 
                                description = '', )
                            ], ), ),
                preview_image = openapi_client.models.image_asset.ImageAsset(
                    template_url = '', 
                    width = 56, 
                    height = 56, ),
                upload_operations = [
                    openapi_client.models.upload_operation.UploadOperation(
                        method = '', 
                        url = '', 
                        length = 56, 
                        offset = 56, 
                        request_headers = [
                            openapi_client.models.http_header.HttpHeader(
                                name = '', 
                                value = '', )
                            ], )
                    ],
                asset_delivery_state = openapi_client.models.app_media_asset_state.AppMediaAssetState(
                    errors = [
                        openapi_client.models.app_media_state_error.AppMediaStateError(
                            code = '', 
                            description = '', )
                        ], 
                    warnings = [
                        openapi_client.models.app_media_state_error.AppMediaStateError(
                            code = '', 
                            description = '', )
                        ], 
                    state = 'AWAITING_UPLOAD', ),
                video_delivery_state = openapi_client.models.app_media_video_state.AppMediaVideoState(
                    errors = [
                        openapi_client.models.app_media_state_error.AppMediaStateError(
                            code = '', 
                            description = '', )
                        ], 
                    warnings = [
                        openapi_client.models.app_media_state_error.AppMediaStateError(
                            code = '', 
                            description = '', )
                        ], 
                    state = 'AWAITING_UPLOAD', ),
                app_event_asset_type = 'EVENT_CARD'
            )
        else:
            return AppEventVideoClipAttributes(
        )
        """

    def testAppEventVideoClipAttributes(self):
        """Test AppEventVideoClipAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
