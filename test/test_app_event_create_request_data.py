# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_event_create_request_data import AppEventCreateRequestData

class TestAppEventCreateRequestData(unittest.TestCase):
    """AppEventCreateRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppEventCreateRequestData:
        """Test AppEventCreateRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppEventCreateRequestData`
        """
        model = AppEventCreateRequestData()
        if include_optional:
            return AppEventCreateRequestData(
                type = 'appEvents',
                attributes = openapi_client.models.app_event_create_request_data_attributes.AppEventCreateRequest_data_attributes(
                    reference_name = '', 
                    badge = 'LIVE_EVENT', 
                    deep_link = '', 
                    purchase_requirement = '', 
                    primary_locale = '', 
                    priority = 'HIGH', 
                    purpose = 'APPROPRIATE_FOR_ALL_USERS', 
                    territory_schedules = [
                        openapi_client.models.app_event_attributes_territory_schedules_inner.AppEvent_attributes_territorySchedules_inner(
                            territories = [
                                ''
                                ], 
                            publish_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            event_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            event_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
                relationships = openapi_client.models.accessibility_declaration_create_request_data_relationships.AccessibilityDeclarationCreateRequest_data_relationships(
                    app = openapi_client.models.accessibility_declaration_create_request_data_relationships_app.AccessibilityDeclarationCreateRequest_data_relationships_app(
                        data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                            type = 'apps', 
                            id = '', ), ), )
            )
        else:
            return AppEventCreateRequestData(
                type = 'appEvents',
                attributes = openapi_client.models.app_event_create_request_data_attributes.AppEventCreateRequest_data_attributes(
                    reference_name = '', 
                    badge = 'LIVE_EVENT', 
                    deep_link = '', 
                    purchase_requirement = '', 
                    primary_locale = '', 
                    priority = 'HIGH', 
                    purpose = 'APPROPRIATE_FOR_ALL_USERS', 
                    territory_schedules = [
                        openapi_client.models.app_event_attributes_territory_schedules_inner.AppEvent_attributes_territorySchedules_inner(
                            territories = [
                                ''
                                ], 
                            publish_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            event_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            event_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
                relationships = openapi_client.models.accessibility_declaration_create_request_data_relationships.AccessibilityDeclarationCreateRequest_data_relationships(
                    app = openapi_client.models.accessibility_declaration_create_request_data_relationships_app.AccessibilityDeclarationCreateRequest_data_relationships_app(
                        data = openapi_client.models.accessibility_declaration_create_request_data_relationships_app_data.AccessibilityDeclarationCreateRequest_data_relationships_app_data(
                            type = 'apps', 
                            id = '', ), ), ),
        )
        """

    def testAppEventCreateRequestData(self):
        """Test AppEventCreateRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
